// --byre-host="device-file-name=your_file target=cuda entry-func=forward"

module attributes {byre.container_module, gpu.container_module, torch.debug_module_name = "MLPModule"} {
  func.func @forward(%arg0: memref<10x20xf32, "cuda"> {byre.argname = "Weight0", byre.argtype = 4 : i32, byre.weight_value = dense<"0xtensor<10x20xf32>}, %arg1: memref<20xf32, "cuda"> {byre.argname = "Weight1", byre.argtype = 4 : i32, byre.weight_value = dense<[0.124238588, -0.0375917405, -0.178324029, 2.1018261E-4, -0.0708629936, 0.179958493, 0.201986402, -0.0302014686, -0.0842267424, 0.0796111747, 0.0201944318, -0.183529228, -0.133614406, -0.0192934573, 0.193412527, 0.219010666, -0.0464102961, 0.00334274326, -0.0029087835, 0.0903228372]> : tensor<20xf32>}, %arg2: memref<?x10xf32, "cuda"> {byre.argname = "Input0", byre.argtype = 1 : i32}, %arg3: memref<?x20xf32, "cuda"> {byre.argname = "Input1", byre.argtype = 1 : i32}, %arg4: memref<?x20xf32, "cuda"> {byre.argname = "Output0", byre.argtype = 2 : i32}) attributes {byre.entry_point, device_file_name = "device_output.ptx"} {
    %0:4 = "byre.compute_shape"(%arg2) <{shape_fn = "shapeComputaionFunc_0"}> {device = "cuda", kernel_name = "shapeComputaionFunc_0", llvm_file_name = "host_kernels.ll"} : (memref<?x10xf32, "cuda">) -> (index, index, index, index)
    %alloc = memref.alloc(%0#1) : memref<?x20xf32, "cuda">
    byre.compute @MatmulOp_f32f32_f32(%arg2, %arg0, %alloc) {device = "cuda", lhs_contracting_dimension = 1 : i64, memory_effects = [1 : i32, 1 : i32, 2 : i32], rhs_contracting_dimension = 0 : i64} : memref<?x10xf32, "cuda">, memref<10x20xf32, "cuda">, memref<?x20xf32, "cuda">
    byre.compute @PTXOp(%arg2, %arg1, %alloc, %arg3, %arg4, %0#2, %0#0, %0#0, %0#3, %0#0, %0#0) {__byteir_dynamic_config__, device = "cuda", kernel_name = "Unknown0"} : memref<?x10xf32, "cuda">, memref<20xf32, "cuda">, memref<?x20xf32, "cuda">, memref<?x20xf32, "cuda">, memref<?x20xf32, "cuda">, index, index, index, index, index, index
    return
  }
}
