// RUN: byteir-opt %s -linalg-tensor-opt | FileCheck %s

// CHECK-LABEL: func.func @forward

module attributes {torch.debug_module_name = "GraphModule"} {
  func.func private @Unknown0(%arg0: tensor<20xf32>, %arg1: tensor<2x20xf32>) -> tensor<2x20xf32> attributes {__byteir_elementwise_fusion__} {
    %0 = mhlo.constant dense<0.000000e+00> : tensor<2x20xf32>
    %1 = "mhlo.broadcast_in_dim"(%arg0) {broadcast_dimensions = dense<1> : tensor<1xi64>} : (tensor<20xf32>) -> tensor<2x20xf32>
    %2 = mhlo.add %arg1, %1 : tensor<2x20xf32>
    %3 = mhlo.maximum %2, %0 : tensor<2x20xf32>
    return %3 : tensor<2x20xf32>
  }
  func.func private @Unknown1(%arg0: tensor<20xf32>, %arg1: tensor<2x20xf32>) -> tensor<2x20xf32> attributes {__byteir_elementwise_fusion__} {
    %0 = mhlo.constant dense<0.000000e+00> : tensor<2x20xf32>
    %1 = "mhlo.broadcast_in_dim"(%arg0) {broadcast_dimensions = dense<1> : tensor<1xi64>} : (tensor<20xf32>) -> tensor<2x20xf32>
    %2 = mhlo.add %arg1, %1 : tensor<2x20xf32>
    %3 = mhlo.maximum %2, %0 : tensor<2x20xf32>
    return %3 : tensor<2x20xf32>
  }
  func.func private @Unknown2(%arg0: tensor<10xf32>, %arg1: tensor<2x10xf32>) -> tensor<2x10xf32> attributes {__byteir_elementwise_fusion__} {
    %0 = "mhlo.broadcast_in_dim"(%arg0) {broadcast_dimensions = dense<1> : tensor<1xi64>} : (tensor<10xf32>) -> tensor<2x10xf32>
    %1 = mhlo.add %arg1, %0 : tensor<2x10xf32>
    return %1 : tensor<2x10xf32>
  }
  func.func @forward(%arg0: tensor<2x10xf32>) -> tensor<2x10xf32> {
    %0 = mhlo.constant dense<[0.101879634, -0.178835288, -0.0953023583, -0.0698504745, -0.19658649, -0.297641844, -0.223349303, 0.168986112, 9.007710e-02, 0.101534814, -0.0601868108, -0.0958566219, -0.243612081, 0.198881537, -0.293788224, -0.240900397, 0.184188008, 0.210917979, 0.121171109, -0.155078679]> : tensor<20xf32>
    %1 = mhlo.constant dense<[0.124238588, -0.0375917405, -0.178324029, 2.1018261E-4, -0.0708629936, 0.179958493, 0.201986402, -0.0302014686, -0.0842267424, 0.0796111747, 0.0201944318, -0.183529228, -0.133614406, -0.0192934573, 0.193412527, 0.219010666, -0.0464102961, 0.00334274326, -0.0029087835, 0.0903228372]> : tensor<20xf32>
    %2 = mhlo.constant dense<[0.0670170113, 0.0825609341, -0.125343189, -0.0073415176, -0.100303039, -0.214000896, 0.114002995, 0.21737574, 0.166609675, -0.119800359]> : tensor<10xf32>
    %3 = mhlo.constant dense<"0xtensor<20x10xf32>
    %4 = mhlo.constant dense<"0xtensor<20x20xf32>
    %5 = mhlo.constant dense<"0xtensor<10x20xf32>
    %6 = "mhlo.dot"(%arg0, %5) : (tensor<2x10xf32>, tensor<10x20xf32>) -> tensor<2x20xf32>
    %7 = call @Unknown0(%0, %6) : (tensor<20xf32>, tensor<2x20xf32>) -> tensor<2x20xf32>
    %8 = "mhlo.dot"(%7, %4) : (tensor<2x20xf32>, tensor<20x20xf32>) -> tensor<2x20xf32>
    %9 = call @Unknown1(%1, %8) : (tensor<20xf32>, tensor<2x20xf32>) -> tensor<2x20xf32>
    %10 = "mhlo.dot"(%9, %3) : (tensor<2x20xf32>, tensor<20x10xf32>) -> tensor<2x10xf32>
    %11 = call @Unknown2(%2, %10) : (tensor<10xf32>, tensor<2x10xf32>) -> tensor<2x10xf32>
    return %11 : tensor<2x10xf32>
  }
}