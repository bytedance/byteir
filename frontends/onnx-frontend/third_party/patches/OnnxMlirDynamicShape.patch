diff --git a/src/Conversion/ONNXToStablehlo/ONNXToStablehloCommon.cpp b/src/Conversion/ONNXToStablehlo/ONNXToStablehloCommon.cpp
index 3123d413..4317ec64 100644
--- a/src/Conversion/ONNXToStablehlo/ONNXToStablehloCommon.cpp
+++ b/src/Conversion/ONNXToStablehlo/ONNXToStablehloCommon.cpp
@@ -60,9 +60,19 @@ llvm::SmallVector<Value, 4> getBroadcastedOperands(Operation *op,
         operand.getType().dyn_cast<ShapedType>().getElementType();
     RankedTensorType broadcastedOutputType =
         RankedTensorType::get(outputShapedType.getShape(), elementType);
-    Value broadcast = rewriter.create<stablehlo::DynamicBroadcastInDimOp>(loc,
-        broadcastedOutputType, operand, resultExtents,
-        rewriter.getI64TensorAttr(broadcastDimensions));
+    Value broadcast;
+    if (llvm::equal(operandType.getShape(), outputShapedType.getShape())) {
+      broadcast = operand;
+    } else if (operandType.hasStaticShape() &&
+               outputShapedType.hasStaticShape()) {
+      broadcast = rewriter.create<stablehlo::BroadcastInDimOp>(loc,
+          broadcastedOutputType, operand,
+          rewriter.getI64TensorAttr(broadcastDimensions));
+    } else {
+      broadcast = rewriter.create<stablehlo::DynamicBroadcastInDimOp>(loc,
+          broadcastedOutputType, operand, resultExtents,
+          rewriter.getI64TensorAttr(broadcastDimensions));
+    }
     broadcastedOperands.push_back(broadcast);
   }
   return broadcastedOperands;
@@ -87,9 +97,19 @@ llvm::SmallVector<Value, 4> getBroadcastedOperands(
         operands[0].getType().dyn_cast<ShapedType>().getElementType();
     RankedTensorType broadcastedOutputType =
         RankedTensorType::get(outputShapedType.getShape(), elementType);
-    Value broadcast = rewriter.create<stablehlo::DynamicBroadcastInDimOp>(loc,
-        broadcastedOutputType, operand, resultExtents,
-        rewriter.getI64TensorAttr(broadcastDimensions));
+    Value broadcast;
+    if (llvm::equal(operandType.getShape(), outputShapedType.getShape())) {
+      broadcast = operand;
+    } else if (operandType.hasStaticShape() &&
+               outputShapedType.hasStaticShape()) {
+      broadcast = rewriter.create<stablehlo::BroadcastInDimOp>(loc,
+          broadcastedOutputType, operand,
+          rewriter.getI64TensorAttr(broadcastDimensions));
+    } else {
+      broadcast = rewriter.create<stablehlo::DynamicBroadcastInDimOp>(loc,
+          broadcastedOutputType, operand, resultExtents,
+          rewriter.getI64TensorAttr(broadcastDimensions));
+    }
     broadcastedOperands.push_back(broadcast);
   }
   return broadcastedOperands;
diff --git a/src/Conversion/ONNXToStablehlo/Tensor/Expand.cpp b/src/Conversion/ONNXToStablehlo/Tensor/Expand.cpp
index cfbed51a..75de840c 100644
--- a/src/Conversion/ONNXToStablehlo/Tensor/Expand.cpp
+++ b/src/Conversion/ONNXToStablehlo/Tensor/Expand.cpp
@@ -79,16 +79,16 @@ struct ONNXExpandOpLoweringToStablehlo : public ConversionPattern {
       broadcastedOnes = rewriter.create<stablehlo::BroadcastInDimOp>(
           loc, broadcastedType, ones, rewriter.getI64TensorAttr({}));
     } else {
-      assert(
-          false &&
-          "Shape argument of Expand is the output of an unexpected operation. "
-          "Supported operations are: onnx.Constant and onnx.Shape");
+      int64_t shapeRank = shape.getType().cast<ShapedType>().getShape()[0];
+      SmallVector<int64_t, 4> onesShape(shapeRank, ShapedType::kDynamic);
+      RankedTensorType onesType = RankedTensorType::get(onesShape, elementType);
+      broadcastedOnes = rewriter.create<stablehlo::DynamicBroadcastInDimOp>(
+          loc, onesType, ones, shape, rewriter.getI64TensorAttr({}));
     }
     llvm::SmallVector<Value, 4> newOperands = {input, broadcastedOnes};
     llvm::SmallVector<Value, 4> broadcastedOperands = getBroadcastedOperands(
         newOperands, outputType, rewriter, loc, outputRank);
-    Value result = rewriter.create<stablehlo::MulOp>(
-        loc, op->getResultTypes(), broadcastedOperands);
+    Value result = broadcastedOperands[0];
     rewriter.replaceOp(op, result);

     return success();
diff --git a/test/mlir/conversion/onnx_to_stablehlo/Math/Elementwise.mlir b/test/mlir/conversion/onnx_to_stablehlo/Math/Elementwise.mlir
index 291987ef..9ddce6c7 100644
--- a/test/mlir/conversion/onnx_to_stablehlo/Math/Elementwise.mlir
+++ b/test/mlir/conversion/onnx_to_stablehlo/Math/Elementwise.mlir
@@ -7,11 +7,8 @@ func.func @test_add(%arg0 : tensor<10x10xf32>, %arg1 : tensor<10x10xf32>) -> ten

 // CHECK-LABEL:  func.func @test_add
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<10x10xf32>, [[PARAM_1_:%.+]]: tensor<10x10xf32>) -> tensor<10x10xf32> {
-// CHECK:           [[VAR_0_:%.+]] = shape.const_shape [10, 10] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_0_]], dims = [0, 1] : (tensor<10x10xf32>, tensor<2xindex>) -> tensor<10x10xf32>
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<10x10xf32>, tensor<2xindex>) -> tensor<10x10xf32>
-// CHECK:           [[VAR_3_:%.+]] = stablehlo.add [[VAR_1_]], [[VAR_2_]] : tensor<10x10xf32>
-// CHECK:           return [[VAR_3_]] : tensor<10x10xf32>
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.add [[PARAM_0_]], [[PARAM_1_]] : tensor<10x10xf32>
+// CHECK:           return [[VAR_0_]] : tensor<10x10xf32>
 // CHECK:         }

 // -----
@@ -23,13 +20,8 @@ func.func @test_add_dynamic(%arg0 : tensor<?x10xf32>, %arg1 : tensor<?x10xf32>)

 // CHECK-LABEL:  func.func @test_add_dynamic
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<?x10xf32>, [[PARAM_1_:%.+]]: tensor<?x10xf32>) -> tensor<?x10xf32> {
-// CHECK-DAG:       [[VAR_0_:%.+]] = shape.shape_of [[PARAM_0_]] : tensor<?x10xf32> -> tensor<2xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = shape.shape_of [[PARAM_1_]] : tensor<?x10xf32> -> tensor<2xindex>
-// CHECK:           [[VAR_2_:%.+]] = shape.broadcast [[VAR_0_]], [[VAR_1_]] : tensor<2xindex>, tensor<2xindex> -> tensor<2xindex>
-// CHECK-DAG:       [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_2_]], dims = [0, 1] : (tensor<?x10xf32>, tensor<2xindex>) -> tensor<?x10xf32>
-// CHECK-DAG:       [[VAR_4_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_2_]], dims = [0, 1] : (tensor<?x10xf32>, tensor<2xindex>) -> tensor<?x10xf32>
-// CHECK:           [[VAR_5_:%.+]] = stablehlo.add [[VAR_3_]], [[VAR_4_]] : tensor<?x10xf32>
-// CHECK:           return [[VAR_5_]] : tensor<?x10xf32>
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.add [[PARAM_0_]], [[PARAM_1_]] : tensor<?x10xf32>
+// CHECK:           return [[VAR_0_]] : tensor<?x10xf32>
 // CHECK:         }

 // -----
@@ -185,11 +177,8 @@ func.func @test_and(%arg0 : tensor<10x10xi1>, %arg1 : tensor<10x10xi1>) -> tenso

 // CHECK-LABEL:  func.func @test_and
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<10x10xi1>, [[PARAM_1_:%.+]]: tensor<10x10xi1>) -> tensor<10x10xi1> {
-// CHECK:           [[VAR_0_:%.+]] = shape.const_shape [10, 10] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_0_]], dims = [0, 1] : (tensor<10x10xi1>, tensor<2xindex>) -> tensor<10x10xi1>
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<10x10xi1>, tensor<2xindex>) -> tensor<10x10xi1>
-// CHECK:           [[VAR_3_:%.+]] = stablehlo.and [[VAR_1_]], [[VAR_2_]] : tensor<10x10xi1>
-// CHECK:           return [[VAR_3_]] : tensor<10x10xi1>
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.and [[PARAM_0_]], [[PARAM_1_]] : tensor<10x10xi1>
+// CHECK:           return [[VAR_0_]] : tensor<10x10xi1>
 // CHECK:         }

 // -----
@@ -201,13 +190,8 @@ func.func @test_dyn_and(%arg0 : tensor<?x10xi1>, %arg1 : tensor<?x10xi1>) -> ten

 // CHECK-LABEL:  func.func @test_dyn_and
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<?x10xi1>, [[PARAM_1_:%.+]]: tensor<?x10xi1>) -> tensor<?x10xi1> {
-// CHECK-DAG:       [[VAR_0_:%.+]] = shape.shape_of [[PARAM_0_]] : tensor<?x10xi1> -> tensor<2xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = shape.shape_of [[PARAM_1_]] : tensor<?x10xi1> -> tensor<2xindex>
-// CHECK:           [[VAR_2_:%.+]] = shape.broadcast [[VAR_0_]], [[VAR_1_]] : tensor<2xindex>, tensor<2xindex> -> tensor<2xindex>
-// CHECK-DAG:       [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_2_]], dims = [0, 1] : (tensor<?x10xi1>, tensor<2xindex>) -> tensor<?x10xi1>
-// CHECK-DAG:       [[VAR_4_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_2_]], dims = [0, 1] : (tensor<?x10xi1>, tensor<2xindex>) -> tensor<?x10xi1>
-// CHECK:           [[VAR_5_:%.+]] = stablehlo.and [[VAR_3_]], [[VAR_4_]] : tensor<?x10xi1>
-// CHECK:           return [[VAR_5_]] : tensor<?x10xi1>
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.and [[PARAM_0_]], [[PARAM_1_]] : tensor<?x10xi1>
+// CHECK:           return [[VAR_0_]] : tensor<?x10xi1>
 // CHECK:         }

 // -----
@@ -284,11 +268,8 @@ func.func @test_less(%arg0: tensor<3x4x5xf32>, %arg1: tensor<3x4x5xf32>) -> tens

 // CHECK-LABEL:  func.func @test_less
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<3x4x5xf32>, [[PARAM_1_:%.+]]: tensor<3x4x5xf32>) -> tensor<3x4x5xi1> {
-// CHECK:           [[VAR_0_:%.+]] = shape.const_shape [3, 4, 5] : tensor<3xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_0_]], dims = [0, 1, 2] : (tensor<3x4x5xf32>, tensor<3xindex>) -> tensor<3x4x5xf32>
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_0_]], dims = [0, 1, 2] : (tensor<3x4x5xf32>, tensor<3xindex>) -> tensor<3x4x5xf32>
-// CHECK:           [[VAR_3_:%.+]] = stablehlo.compare  LT, [[VAR_1_]], [[VAR_2_]],  NOTYPE : (tensor<3x4x5xf32>, tensor<3x4x5xf32>) -> tensor<3x4x5xi1>
-// CHECK:           return [[VAR_3_]] : tensor<3x4x5xi1>
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.compare  LT, [[PARAM_0_]], [[PARAM_1_]],  NOTYPE : (tensor<3x4x5xf32>, tensor<3x4x5xf32>) -> tensor<3x4x5xi1>
+// CHECK:           return [[VAR_0_]] : tensor<3x4x5xi1>
 // CHECK:         }

 // -----
@@ -303,10 +284,9 @@ func.func @test_binary_elementwise_op_template_unknown_dims(%arg0: tensor<?x4x5x
 // CHECK-DAG:       [[VAR_0_:%.+]] = shape.shape_of [[PARAM_0_]] : tensor<?x4x5xf32> -> tensor<3xindex>
 // CHECK-DAG:       [[VAR_1_:%.+]] = shape.shape_of [[PARAM_1_]] : tensor<1x?x1xf32> -> tensor<3xindex>
 // CHECK:           [[VAR_2_:%.+]] = shape.broadcast [[VAR_0_]], [[VAR_1_]] : tensor<3xindex>, tensor<3xindex> -> tensor<3xindex>
-// CHECK-DAG:       [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_2_]], dims = [0, 1, 2] : (tensor<?x4x5xf32>, tensor<3xindex>) -> tensor<?x4x5xf32>
-// CHECK-DAG:       [[VAR_4_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_2_]], dims = [0, 1, 2] : (tensor<1x?x1xf32>, tensor<3xindex>) -> tensor<?x4x5xf32>
-// CHECK:           [[VAR_5_:%.+]] = stablehlo.compare  LT, [[VAR_3_]], [[VAR_4_]],  NOTYPE : (tensor<?x4x5xf32>, tensor<?x4x5xf32>) -> tensor<?x4x5xi1>
-// CHECK:           return [[VAR_5_]] : tensor<?x4x5xi1>
+// CHECK:           [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_2_]], dims = [0, 1, 2] : (tensor<1x?x1xf32>, tensor<3xindex>) -> tensor<?x4x5xf32>
+// CHECK:           [[VAR_4_:%.+]] = stablehlo.compare  LT, [[PARAM_0_]], [[VAR_3_]],  NOTYPE : (tensor<?x4x5xf32>, tensor<?x4x5xf32>) -> tensor<?x4x5xi1>
+// CHECK:           return [[VAR_4_]] : tensor<?x4x5xi1>
 // CHECK:         }

 // -----
@@ -321,10 +301,9 @@ func.func @test_less_unknown_dims_2(%arg0: tensor<?x?x5xf32>, %arg1: tensor<?x4x
 // CHECK-DAG:       [[VAR_0_:%.+]] = shape.shape_of [[PARAM_0_]] : tensor<?x?x5xf32> -> tensor<3xindex>
 // CHECK-DAG:       [[VAR_1_:%.+]] = shape.shape_of [[PARAM_1_]] : tensor<?x4x5xf32> -> tensor<3xindex>
 // CHECK:           [[VAR_2_:%.+]] = shape.broadcast [[VAR_0_]], [[VAR_1_]] : tensor<3xindex>, tensor<3xindex> -> tensor<3xindex>
-// CHECK-DAG:       [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_2_]], dims = [0, 1, 2] : (tensor<?x?x5xf32>, tensor<3xindex>) -> tensor<?x4x5xf32>
-// CHECK-DAG:       [[VAR_4_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_2_]], dims = [0, 1, 2] : (tensor<?x4x5xf32>, tensor<3xindex>) -> tensor<?x4x5xf32>
-// CHECK:           [[VAR_5_:%.+]] = stablehlo.compare  LT, [[VAR_3_]], [[VAR_4_]],  NOTYPE : (tensor<?x4x5xf32>, tensor<?x4x5xf32>) -> tensor<?x4x5xi1>
-// CHECK:           return [[VAR_5_]] : tensor<?x4x5xi1>
+// CHECK:           [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_2_]], dims = [0, 1, 2] : (tensor<?x?x5xf32>, tensor<3xindex>) -> tensor<?x4x5xf32>
+// CHECK:           [[VAR_4_:%.+]] = stablehlo.compare  LT, [[VAR_3_]], [[PARAM_1_]],  NOTYPE : (tensor<?x4x5xf32>, tensor<?x4x5xf32>) -> tensor<?x4x5xi1>
+// CHECK:           return [[VAR_4_]] : tensor<?x4x5xi1>
 // CHECK:         }

 // -----
@@ -336,11 +315,9 @@ func.func @test_pow_verifier_1(%arg0: tensor<1x2x3x4xf32>, %arg1: tensor<f32>) -

 // CHECK-LABEL:  func.func @test_pow_verifier_1
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<1x2x3x4xf32>, [[PARAM_1_:%.+]]: tensor<f32>) -> tensor<1x2x3x4xf32> {
-// CHECK:           [[VAR_0_:%.+]] = shape.const_shape [1, 2, 3, 4] : tensor<4xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_0_]], dims = [0, 1, 2, 3] : (tensor<1x2x3x4xf32>, tensor<4xindex>) -> tensor<1x2x3x4xf32>
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_0_]], dims = [] : (tensor<f32>, tensor<4xindex>) -> tensor<1x2x3x4xf32>
-// CHECK:           [[VAR_3_:%.+]] = stablehlo.power [[VAR_1_]], [[VAR_2_]] : tensor<1x2x3x4xf32>
-// CHECK:           return [[VAR_3_]] : tensor<1x2x3x4xf32>
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.broadcast_in_dim [[PARAM_1_]], dims = [] : (tensor<f32>) -> tensor<1x2x3x4xf32>
+// CHECK:           [[VAR_1_:%.+]] = stablehlo.power [[PARAM_0_]], [[VAR_0_]] : tensor<1x2x3x4xf32>
+// CHECK:           return [[VAR_1_]] : tensor<1x2x3x4xf32>
 // CHECK:         }

 // -----
@@ -355,10 +332,9 @@ func.func @test_mul_unknown_dims(%arg0 : tensor<10x10xf32>, %arg1 : tensor<10x?x
 // CHECK-DAG:       [[VAR_0_:%.+]] = shape.const_shape [10, 10] : tensor<2xindex>
 // CHECK-DAG:       [[VAR_1_:%.+]] = shape.shape_of [[PARAM_1_]] : tensor<10x?xf32> -> tensor<2xindex>
 // CHECK:           [[VAR_2_:%.+]] = shape.broadcast [[VAR_1_]], [[VAR_0_]] : tensor<2xindex>, tensor<2xindex> -> tensor<2xindex>
-// CHECK-DAG:       [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_2_]], dims = [0, 1] : (tensor<10x10xf32>, tensor<2xindex>) -> tensor<10x10xf32>
-// CHECK-DAG:       [[VAR_4_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_2_]], dims = [0, 1] : (tensor<10x?xf32>, tensor<2xindex>) -> tensor<10x10xf32>
-// CHECK:           [[VAR_5_:%.+]] = stablehlo.multiply [[VAR_3_]], [[VAR_4_]] : tensor<10x10xf32>
-// CHECK:           return [[VAR_5_]] : tensor<10x10xf32>
+// CHECK:           [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_2_]], dims = [0, 1] : (tensor<10x?xf32>, tensor<2xindex>) -> tensor<10x10xf32>
+// CHECK:           [[VAR_4_:%.+]] = stablehlo.multiply [[PARAM_0_]], [[VAR_3_]] : tensor<10x10xf32>
+// CHECK:           return [[VAR_4_]] : tensor<10x10xf32>
 // CHECK:         }

 // -----
@@ -409,11 +385,8 @@ func.func @test_max(%arg0 : tensor<10x10xf32>, %arg1 : tensor<10x10xf32>) -> ten

 // CHECK-LABEL:  func.func @test_max
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<10x10xf32>, [[PARAM_1_:%.+]]: tensor<10x10xf32>) -> tensor<10x10xf32> {
-// CHECK:           [[VAR_0_:%.+]] = shape.const_shape [10, 10] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_0_]], dims = [0, 1] : (tensor<10x10xf32>, tensor<2xindex>) -> tensor<10x10xf32>
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<10x10xf32>, tensor<2xindex>) -> tensor<10x10xf32>
-// CHECK:           [[VAR_3_:%.+]] = stablehlo.maximum [[VAR_1_]], [[VAR_2_]] : tensor<10x10xf32>
-// CHECK:           return [[VAR_3_]] : tensor<10x10xf32>
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.maximum [[PARAM_0_]], [[PARAM_1_]] : tensor<10x10xf32>
+// CHECK:           return [[VAR_0_]] : tensor<10x10xf32>
 // CHECK:         }

 // -----
@@ -423,11 +396,8 @@ func.func @test_min(%arg0 : tensor<10x10xf32>, %arg1 : tensor<10x10xf32>) -> ten
   "func.return"(%0) : (tensor<10x10xf32>) -> ()
 // CHECK-LABEL:  func.func @test_min
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<10x10xf32>, [[PARAM_1_:%.+]]: tensor<10x10xf32>) -> tensor<10x10xf32> {
-// CHECK:           [[VAR_0_:%.+]] = shape.const_shape [10, 10] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_0_]], dims = [0, 1] : (tensor<10x10xf32>, tensor<2xindex>) -> tensor<10x10xf32>
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<10x10xf32>, tensor<2xindex>) -> tensor<10x10xf32>
-// CHECK:           [[VAR_3_:%.+]] = stablehlo.minimum [[VAR_1_]], [[VAR_2_]] : tensor<10x10xf32>
-// CHECK:           return [[VAR_3_]] : tensor<10x10xf32>
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.minimum [[PARAM_0_]], [[PARAM_1_]] : tensor<10x10xf32>
+// CHECK:           return [[VAR_0_]] : tensor<10x10xf32>
 // CHECK:         }
 }

@@ -459,19 +429,17 @@ func.func @test_prelu_dynamic(%arg0 : tensor<?x10x12x12xf32>, %arg1: tensor<10x1
   "func.return"(%0) : (tensor<?x10x12x12xf32>) -> ()
 // CHECK-LABEL:  func.func @test_prelu_dynamic
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<?x10x12x12xf32>, [[PARAM_1_:%.+]]: tensor<10x1x1xf32>) -> tensor<?x10x12x12xf32> {
-// CHECK-DAG:       [[VAR_0_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<f32>
-// CHECK-DAG:       [[VAR_1_:%.+]] = shape.const_shape [10, 1, 1] : tensor<3xindex>
+// CHECK-DAG:       [[VAR_0_:%.+]] = shape.const_shape [10, 1, 1] : tensor<3xindex>
+// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<f32>
 // CHECK-DAG:       [[VAR_2_:%.+]] = shape.shape_of [[PARAM_0_]] : tensor<?x10x12x12xf32> -> tensor<4xindex>
-// CHECK:           [[VAR_3_:%.+]] = shape.broadcast [[VAR_2_]], [[VAR_1_]] : tensor<4xindex>, tensor<3xindex> -> tensor<4xindex>
-// CHECK-DAG:       [[VAR_4_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_3_]], dims = [0, 1, 2, 3] : (tensor<?x10x12x12xf32>, tensor<4xindex>) -> tensor<?x10x12x12xf32>
-// CHECK-DAG:       [[VAR_5_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_3_]], dims = [1, 2, 3] : (tensor<10x1x1xf32>, tensor<4xindex>) -> tensor<?x10x12x12xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_6_:%.+]] = stablehlo.multiply [[VAR_4_]], [[VAR_5_]] : tensor<?x10x12x12xf32>
-// CHECK-DAG:       [[VAR_7_:%.+]] = shape.shape_of [[VAR_4_]] : tensor<?x10x12x12xf32> -> tensor<4xindex>
-// CHECK:           [[VAR_8_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_0_]], [[VAR_7_]], dims = [] : (tensor<f32>, tensor<4xindex>) -> tensor<?x10x12x12xf32>
-// CHECK:           [[VAR_9_:%.+]] = stablehlo.compare  GT, [[VAR_4_]], [[VAR_8_]],  NOTYPE : (tensor<?x10x12x12xf32>, tensor<?x10x12x12xf32>) -> tensor<?x10x12x12xi1>
-// CHECK:           [[VAR_10_:%.+]] = stablehlo.select [[VAR_9_]], [[VAR_4_]], [[VAR_6_]] : tensor<?x10x12x12xi1>, tensor<?x10x12x12xf32>
-// CHECK:           return [[VAR_10_]] : tensor<?x10x12x12xf32>
+// CHECK:           [[VAR_3_:%.+]] = shape.broadcast [[VAR_2_]], [[VAR_0_]] : tensor<4xindex>, tensor<3xindex> -> tensor<4xindex>
+// CHECK:           [[VAR_4_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_3_]], dims = [1, 2, 3] : (tensor<10x1x1xf32>, tensor<4xindex>) -> tensor<?x10x12x12xf32>
+// CHECK-DAG:       [[VAR_5_:%.+]] = stablehlo.multiply [[PARAM_0_]], [[VAR_4_]] : tensor<?x10x12x12xf32>
+// CHECK-DAG:       [[VAR_6_:%.+]] = shape.shape_of [[PARAM_0_]] : tensor<?x10x12x12xf32> -> tensor<4xindex>
+// CHECK:           [[VAR_7_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_1_]], [[VAR_6_]], dims = [] : (tensor<f32>, tensor<4xindex>) -> tensor<?x10x12x12xf32>
+// CHECK:           [[VAR_8_:%.+]] = stablehlo.compare  GT, [[PARAM_0_]], [[VAR_7_]],  NOTYPE : (tensor<?x10x12x12xf32>, tensor<?x10x12x12xf32>) -> tensor<?x10x12x12xi1>
+// CHECK:           [[VAR_9_:%.+]] = stablehlo.select [[VAR_8_]], [[PARAM_0_]], [[VAR_5_]] : tensor<?x10x12x12xi1>, tensor<?x10x12x12xf32>
+// CHECK:           return [[VAR_9_]] : tensor<?x10x12x12xf32>
 // CHECK:         }
 }

@@ -519,11 +487,7 @@ func.func @test_where(%arg0 : tensor<16x24x36xi1>, %arg1 : tensor<16x24x36xi64>,
   "func.return"(%0) : (tensor<16x24x36xi64>) -> ()
 // CHECK-LABEL:  func.func @test_where
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<16x24x36xi1>, [[PARAM_1_:%.+]]: tensor<16x24x36xi64>, [[PARAM_2_:%.+]]: tensor<16x24x36xi64>) -> tensor<16x24x36xi64> {
-// CHECK:           [[VAR_0_:%.+]] = shape.const_shape [16, 24, 36] : tensor<3xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_0_]], dims = [0, 1, 2] : (tensor<16x24x36xi1>, tensor<3xindex>) -> tensor<16x24x36xi1>
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_1_]], [[VAR_0_]], dims = [0, 1, 2] : (tensor<16x24x36xi64>, tensor<3xindex>) -> tensor<16x24x36xi64>
-// CHECK-DAG:       [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_2_]], [[VAR_0_]], dims = [0, 1, 2] : (tensor<16x24x36xi64>, tensor<3xindex>) -> tensor<16x24x36xi64>
-// CHECK:           [[VAR_4_:%.+]] = stablehlo.select [[VAR_1_]], [[VAR_2_]], [[VAR_3_]] : tensor<16x24x36xi1>, tensor<16x24x36xi64>
-// CHECK:           return [[VAR_4_]] : tensor<16x24x36xi64>
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.select [[PARAM_0_]], [[PARAM_1_]], [[PARAM_2_]] : tensor<16x24x36xi1>, tensor<16x24x36xi64>
+// CHECK:           return [[VAR_0_]] : tensor<16x24x36xi64>
 // CHECK:         }
 }
diff --git a/test/mlir/conversion/onnx_to_stablehlo/Math/Softmax.mlir b/test/mlir/conversion/onnx_to_stablehlo/Math/Softmax.mlir
index 2a8894d9..69bea552 100644
--- a/test/mlir/conversion/onnx_to_stablehlo/Math/Softmax.mlir
+++ b/test/mlir/conversion/onnx_to_stablehlo/Math/Softmax.mlir
@@ -8,21 +8,18 @@ func.func @test_softmax(%arg0 : tensor<10x20x30xf32>) -> tensor<10x20x30xf32> {
 // CHECK-LABEL:  func.func @test_softmax
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<10x20x30xf32>) -> tensor<10x20x30xf32> {
 // CHECK-DAG:       [[VAR_0_:%.+]] = shape.const_shape [10, 1, 30] : tensor<3xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = shape.const_shape [10, 20, 30] : tensor<3xindex>
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<f32>
-// CHECK-DAG:       [[VAR_3_:%.+]] = stablehlo.constant dense<0xFF800000> : tensor<f32>
-// CHECK:           [[VAR_4_:%.+]] = stablehlo.reduce([[PARAM_0_]] init: [[VAR_3_]]) applies stablehlo.maximum across dimensions = [1] : (tensor<10x20x30xf32>, tensor<f32>) -> tensor<10x30xf32>
-// CHECK-DAG:       [[VAR_5_:%.+]] = stablehlo.dynamic_reshape [[VAR_4_]], [[VAR_0_]] : (tensor<10x30xf32>, tensor<3xindex>) -> tensor<10x1x30xf32>
-// CHECK-DAG:       [[VAR_6_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_1_]], dims = [0, 1, 2] : (tensor<10x20x30xf32>, tensor<3xindex>) -> tensor<10x20x30xf32>
-// CHECK:           [[VAR_7_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_5_]], [[VAR_1_]], dims = [0, 1, 2] : (tensor<10x1x30xf32>, tensor<3xindex>) -> tensor<10x20x30xf32>
-// CHECK:           [[VAR_8_:%.+]] = stablehlo.subtract [[VAR_6_]], [[VAR_7_]] : tensor<10x20x30xf32>
-// CHECK:           [[VAR_9_:%.+]] = stablehlo.exponential [[VAR_8_]] : tensor<10x20x30xf32>
-// CHECK:           [[VAR_10_:%.+]] = stablehlo.reduce([[VAR_9_]] init: [[VAR_2_]]) applies stablehlo.add across dimensions = [1] : (tensor<10x20x30xf32>, tensor<f32>) -> tensor<10x30xf32>
-// CHECK-DAG:       [[VAR_11_:%.+]] = stablehlo.dynamic_reshape [[VAR_10_]], [[VAR_0_]] : (tensor<10x30xf32>, tensor<3xindex>) -> tensor<10x1x30xf32>
-// CHECK-DAG:       [[VAR_12_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_9_]], [[VAR_1_]], dims = [0, 1, 2] : (tensor<10x20x30xf32>, tensor<3xindex>) -> tensor<10x20x30xf32>
-// CHECK:           [[VAR_13_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_11_]], [[VAR_1_]], dims = [0, 1, 2] : (tensor<10x1x30xf32>, tensor<3xindex>) -> tensor<10x20x30xf32>
-// CHECK:           [[VAR_14_:%.+]] = stablehlo.divide [[VAR_12_]], [[VAR_13_]] : tensor<10x20x30xf32>
-// CHECK:           return [[VAR_14_]] : tensor<10x20x30xf32>
+// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<f32>
+// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.constant dense<0xFF800000> : tensor<f32>
+// CHECK:           [[VAR_3_:%.+]] = stablehlo.reduce([[PARAM_0_]] init: [[VAR_2_]]) applies stablehlo.maximum across dimensions = [1] : (tensor<10x20x30xf32>, tensor<f32>) -> tensor<10x30xf32>
+// CHECK:           [[VAR_4_:%.+]] = stablehlo.dynamic_reshape [[VAR_3_]], [[VAR_0_]] : (tensor<10x30xf32>, tensor<3xindex>) -> tensor<10x1x30xf32>
+// CHECK:           [[VAR_5_:%.+]] = stablehlo.broadcast_in_dim [[VAR_4_]], dims = [0, 1, 2] : (tensor<10x1x30xf32>) -> tensor<10x20x30xf32>
+// CHECK:           [[VAR_6_:%.+]] = stablehlo.subtract [[PARAM_0_]], [[VAR_5_]] : tensor<10x20x30xf32>
+// CHECK:           [[VAR_7_:%.+]] = stablehlo.exponential [[VAR_6_]] : tensor<10x20x30xf32>
+// CHECK:           [[VAR_8_:%.+]] = stablehlo.reduce([[VAR_7_]] init: [[VAR_1_]]) applies stablehlo.add across dimensions = [1] : (tensor<10x20x30xf32>, tensor<f32>) -> tensor<10x30xf32>
+// CHECK:           [[VAR_9_:%.+]] = stablehlo.dynamic_reshape [[VAR_8_]], [[VAR_0_]] : (tensor<10x30xf32>, tensor<3xindex>) -> tensor<10x1x30xf32>
+// CHECK:           [[VAR_10_:%.+]] = stablehlo.broadcast_in_dim [[VAR_9_]], dims = [0, 1, 2] : (tensor<10x1x30xf32>) -> tensor<10x20x30xf32>
+// CHECK:           [[VAR_11_:%.+]] = stablehlo.divide [[VAR_7_]], [[VAR_10_]] : tensor<10x20x30xf32>
+// CHECK:           return [[VAR_11_]] : tensor<10x20x30xf32>
 // CHECK:         }

 // -----
@@ -51,25 +48,23 @@ func.func @test_softmax_dynamic(%arg0 : tensor<?x20x30xf32>) -> tensor<?x20x30xf
 // CHECK-DAG:       [[VAR_9_:%.+]] = shape.shape_of [[PARAM_0_]] : tensor<?x20x30xf32> -> tensor<3xindex>
 // CHECK:           [[VAR_10_:%.+]] = shape.shape_of [[VAR_8_]] : tensor<?x1x30xf32> -> tensor<3xindex>
 // CHECK:           [[VAR_11_:%.+]] = shape.broadcast [[VAR_9_]], [[VAR_10_]] : tensor<3xindex>, tensor<3xindex> -> tensor<3xindex>
-// CHECK-DAG:       [[VAR_12_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_11_]], dims = [0, 1, 2] : (tensor<?x20x30xf32>, tensor<3xindex>) -> tensor<?x20x30xf32>
-// CHECK-DAG:       [[VAR_13_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_8_]], [[VAR_11_]], dims = [0, 1, 2] : (tensor<?x1x30xf32>, tensor<3xindex>) -> tensor<?x20x30xf32>
-// CHECK:           [[VAR_14_:%.+]] = stablehlo.subtract [[VAR_12_]], [[VAR_13_]] : tensor<?x20x30xf32>
-// CHECK:           [[VAR_15_:%.+]] = stablehlo.exponential [[VAR_14_]] : tensor<?x20x30xf32>
-// CHECK-DAG:       [[VAR_16_:%.+]] = stablehlo.reduce([[VAR_15_]] init: [[VAR_0_]]) applies stablehlo.add across dimensions = [1] : (tensor<?x20x30xf32>, tensor<f32>) -> tensor<?x30xf32>
-// CHECK-DAG:       [[VAR_17_:%.+]] = shape.shape_of [[VAR_15_]] : tensor<?x20x30xf32> -> tensor<3xindex>
+// CHECK:           [[VAR_12_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_8_]], [[VAR_11_]], dims = [0, 1, 2] : (tensor<?x1x30xf32>, tensor<3xindex>) -> tensor<?x20x30xf32>
+// CHECK:           [[VAR_13_:%.+]] = stablehlo.subtract [[PARAM_0_]], [[VAR_12_]] : tensor<?x20x30xf32>
+// CHECK:           [[VAR_14_:%.+]] = stablehlo.exponential [[VAR_13_]] : tensor<?x20x30xf32>
+// CHECK-DAG:       [[VAR_15_:%.+]] = stablehlo.reduce([[VAR_14_]] init: [[VAR_0_]]) applies stablehlo.add across dimensions = [1] : (tensor<?x20x30xf32>, tensor<f32>) -> tensor<?x30xf32>
+// CHECK-DAG:       [[VAR_16_:%.+]] = shape.shape_of [[VAR_14_]] : tensor<?x20x30xf32> -> tensor<3xindex>
 // CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_18_:%.+]] = shape.get_extent [[VAR_17_]], [[CST_0_]] : tensor<3xindex>, index -> index
-// CHECK-DAG:       [[VAR_19_:%.+]] = shape.get_extent [[VAR_17_]], [[CST_2_]] : tensor<3xindex>, index -> index
-// CHECK:           [[VAR_20_:%.+]] = shape.from_extents [[VAR_18_]], [[CST_1_]], [[VAR_19_]] : index, index, index
-// CHECK:           [[VAR_21_:%.+]] = shape.to_extent_tensor [[VAR_20_]] : !shape.shape -> tensor<3xindex>
-// CHECK-DAG:       [[VAR_22_:%.+]] = stablehlo.dynamic_reshape [[VAR_16_]], [[VAR_21_]] : (tensor<?x30xf32>, tensor<3xindex>) -> tensor<?x1x30xf32>
-// CHECK-DAG:       [[VAR_23_:%.+]] = shape.shape_of [[VAR_15_]] : tensor<?x20x30xf32> -> tensor<3xindex>
-// CHECK:           [[VAR_24_:%.+]] = shape.shape_of [[VAR_22_]] : tensor<?x1x30xf32> -> tensor<3xindex>
-// CHECK:           [[VAR_25_:%.+]] = shape.broadcast [[VAR_23_]], [[VAR_24_]] : tensor<3xindex>, tensor<3xindex> -> tensor<3xindex>
-// CHECK-DAG:       [[VAR_26_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_15_]], [[VAR_25_]], dims = [0, 1, 2] : (tensor<?x20x30xf32>, tensor<3xindex>) -> tensor<?x20x30xf32>
-// CHECK-DAG:       [[VAR_27_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_22_]], [[VAR_25_]], dims = [0, 1, 2] : (tensor<?x1x30xf32>, tensor<3xindex>) -> tensor<?x20x30xf32>
-// CHECK:           [[VAR_28_:%.+]] = stablehlo.divide [[VAR_26_]], [[VAR_27_]] : tensor<?x20x30xf32>
-// CHECK:           return [[VAR_28_]] : tensor<?x20x30xf32>
+// CHECK-DAG:       [[VAR_17_:%.+]] = shape.get_extent [[VAR_16_]], [[CST_0_]] : tensor<3xindex>, index -> index
+// CHECK-DAG:       [[VAR_18_:%.+]] = shape.get_extent [[VAR_16_]], [[CST_2_]] : tensor<3xindex>, index -> index
+// CHECK:           [[VAR_19_:%.+]] = shape.from_extents [[VAR_17_]], [[CST_1_]], [[VAR_18_]] : index, index, index
+// CHECK:           [[VAR_20_:%.+]] = shape.to_extent_tensor [[VAR_19_]] : !shape.shape -> tensor<3xindex>
+// CHECK-DAG:       [[VAR_21_:%.+]] = stablehlo.dynamic_reshape [[VAR_15_]], [[VAR_20_]] : (tensor<?x30xf32>, tensor<3xindex>) -> tensor<?x1x30xf32>
+// CHECK-DAG:       [[VAR_22_:%.+]] = shape.shape_of [[VAR_14_]] : tensor<?x20x30xf32> -> tensor<3xindex>
+// CHECK:           [[VAR_23_:%.+]] = shape.shape_of [[VAR_21_]] : tensor<?x1x30xf32> -> tensor<3xindex>
+// CHECK:           [[VAR_24_:%.+]] = shape.broadcast [[VAR_22_]], [[VAR_23_]] : tensor<3xindex>, tensor<3xindex> -> tensor<3xindex>
+// CHECK:           [[VAR_25_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_21_]], [[VAR_24_]], dims = [0, 1, 2] : (tensor<?x1x30xf32>, tensor<3xindex>) -> tensor<?x20x30xf32>
+// CHECK:           [[VAR_26_:%.+]] = stablehlo.divide [[VAR_14_]], [[VAR_25_]] : tensor<?x20x30xf32>
+// CHECK:           return [[VAR_26_]] : tensor<?x20x30xf32>
 // CHECK:         }

 // -----
@@ -82,19 +77,16 @@ func.func @test_softmax_2d(%arg0 : tensor<1x10xf32>) -> tensor<1x10xf32> {
 // CHECK-LABEL:  func.func @test_softmax_2d
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<1x10xf32>) -> tensor<1x10xf32> {
 // CHECK-DAG:       [[VAR_0_:%.+]] = shape.const_shape [1, 1] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = shape.const_shape [1, 10] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<f32>
-// CHECK-DAG:       [[VAR_3_:%.+]] = stablehlo.constant dense<0xFF800000> : tensor<f32>
-// CHECK:           [[VAR_4_:%.+]] = stablehlo.reduce([[PARAM_0_]] init: [[VAR_3_]]) applies stablehlo.maximum across dimensions = [1] : (tensor<1x10xf32>, tensor<f32>) -> tensor<1xf32>
-// CHECK-DAG:       [[VAR_5_:%.+]] = stablehlo.dynamic_reshape [[VAR_4_]], [[VAR_0_]] : (tensor<1xf32>, tensor<2xindex>) -> tensor<1x1xf32>
-// CHECK-DAG:       [[VAR_6_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_1_]], dims = [0, 1] : (tensor<1x10xf32>, tensor<2xindex>) -> tensor<1x10xf32>
-// CHECK:           [[VAR_7_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_5_]], [[VAR_1_]], dims = [0, 1] : (tensor<1x1xf32>, tensor<2xindex>) -> tensor<1x10xf32>
-// CHECK:           [[VAR_8_:%.+]] = stablehlo.subtract [[VAR_6_]], [[VAR_7_]] : tensor<1x10xf32>
-// CHECK:           [[VAR_9_:%.+]] = stablehlo.exponential [[VAR_8_]] : tensor<1x10xf32>
-// CHECK:           [[VAR_10_:%.+]] = stablehlo.reduce([[VAR_9_]] init: [[VAR_2_]]) applies stablehlo.add across dimensions = [1] : (tensor<1x10xf32>, tensor<f32>) -> tensor<1xf32>
-// CHECK-DAG:       [[VAR_11_:%.+]] = stablehlo.dynamic_reshape [[VAR_10_]], [[VAR_0_]] : (tensor<1xf32>, tensor<2xindex>) -> tensor<1x1xf32>
-// CHECK-DAG:       [[VAR_12_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_9_]], [[VAR_1_]], dims = [0, 1] : (tensor<1x10xf32>, tensor<2xindex>) -> tensor<1x10xf32>
-// CHECK:           [[VAR_13_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_11_]], [[VAR_1_]], dims = [0, 1] : (tensor<1x1xf32>, tensor<2xindex>) -> tensor<1x10xf32>
-// CHECK:           [[VAR_14_:%.+]] = stablehlo.divide [[VAR_12_]], [[VAR_13_]] : tensor<1x10xf32>
-// CHECK:           return [[VAR_14_]] : tensor<1x10xf32>
+// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<f32>
+// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.constant dense<0xFF800000> : tensor<f32>
+// CHECK:           [[VAR_3_:%.+]] = stablehlo.reduce([[PARAM_0_]] init: [[VAR_2_]]) applies stablehlo.maximum across dimensions = [1] : (tensor<1x10xf32>, tensor<f32>) -> tensor<1xf32>
+// CHECK:           [[VAR_4_:%.+]] = stablehlo.dynamic_reshape [[VAR_3_]], [[VAR_0_]] : (tensor<1xf32>, tensor<2xindex>) -> tensor<1x1xf32>
+// CHECK:           [[VAR_5_:%.+]] = stablehlo.broadcast_in_dim [[VAR_4_]], dims = [0, 1] : (tensor<1x1xf32>) -> tensor<1x10xf32>
+// CHECK:           [[VAR_6_:%.+]] = stablehlo.subtract [[PARAM_0_]], [[VAR_5_]] : tensor<1x10xf32>
+// CHECK:           [[VAR_7_:%.+]] = stablehlo.exponential [[VAR_6_]] : tensor<1x10xf32>
+// CHECK:           [[VAR_8_:%.+]] = stablehlo.reduce([[VAR_7_]] init: [[VAR_1_]]) applies stablehlo.add across dimensions = [1] : (tensor<1x10xf32>, tensor<f32>) -> tensor<1xf32>
+// CHECK:           [[VAR_9_:%.+]] = stablehlo.dynamic_reshape [[VAR_8_]], [[VAR_0_]] : (tensor<1xf32>, tensor<2xindex>) -> tensor<1x1xf32>
+// CHECK:           [[VAR_10_:%.+]] = stablehlo.broadcast_in_dim [[VAR_9_]], dims = [0, 1] : (tensor<1x1xf32>) -> tensor<1x10xf32>
+// CHECK:           [[VAR_11_:%.+]] = stablehlo.divide [[VAR_7_]], [[VAR_10_]] : tensor<1x10xf32>
+// CHECK:           return [[VAR_11_]] : tensor<1x10xf32>
 // CHECK:         }
diff --git a/test/mlir/conversion/onnx_to_stablehlo/RNN/LSTM-loop.mlir b/test/mlir/conversion/onnx_to_stablehlo/RNN/LSTM-loop.mlir
index c1e63c87..c1032825 100644
--- a/test/mlir/conversion/onnx_to_stablehlo/RNN/LSTM-loop.mlir
+++ b/test/mlir/conversion/onnx_to_stablehlo/RNN/LSTM-loop.mlir
@@ -7,234 +7,180 @@ func.func @test_lstm_loop(%arg0 : tensor<128x16x512xf32>, %arg1 : tensor<2x2048x
 // CHECK-LABEL:  func.func @test_lstm_loop
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<128x16x512xf32>, [[PARAM_1_:%.+]]: tensor<2x2048xf32>, [[PARAM_2_:%.+]]: tensor<2x1024x512xf32>, [[PARAM_3_:%.+]]: tensor<2x1024x256xf32>) -> tensor<128x2x16x256xf32> {
 // CHECK-DAG:       [[VAR_0_:%.+]] = shape.const_shape [16, 256] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = shape.const_shape [1] : tensor<1xindex>
-// CHECK-DAG:       [[VAR_2_:%.+]] = shape.const_shape [1, 1] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_3_:%.+]] = shape.const_shape [1, 1, 16, 256] : tensor<4xindex>
-// CHECK-DAG:       [[VAR_4_:%.+]] = shape.const_shape [16, 1024] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_5_:%.+]] = shape.const_shape [16, 512] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_6_:%.+]] = shape.const_shape [2048] : tensor<1xindex>
-// CHECK-DAG:       [[VAR_7_:%.+]] = shape.const_shape [1024, 256] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_8_:%.+]] = shape.const_shape [1024, 512] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_9_:%.+]] = stablehlo.constant dense<127> : tensor<1xi64>
-// CHECK-DAG:       [[VAR_10_:%.+]] = stablehlo.constant dense<1> : tensor<1xi64>
-// CHECK-DAG:       [[VAR_11_:%.+]] = stablehlo.constant dense<768> : tensor<i64>
-// CHECK-DAG:       [[VAR_12_:%.+]] = stablehlo.constant dense<512> : tensor<i64>
-// CHECK-DAG:       [[VAR_13_:%.+]] = stablehlo.constant dense<256> : tensor<i64>
-// CHECK-DAG:       [[VAR_14_:%.+]] = stablehlo.constant dense<128> : tensor<1xi64>
-// CHECK-DAG:       [[VAR_15_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<2x16x256xf32>
-// CHECK-DAG:       [[VAR_16_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<128x1x16x256xf32>
-// CHECK-DAG:       [[VAR_17_:%.+]] = stablehlo.constant dense<0> : tensor<i64>
-// CHECK-DAG:       [[VAR_18_:%.+]] = stablehlo.constant dense<0> : tensor<1xi64>
-// CHECK-DAG:       [[VAR_19_:%.+]] = stablehlo.constant dense<1> : tensor<i64>
-// CHECK:           [[VAR_20_:%.+]] = stablehlo.dynamic_slice [[VAR_15_]], [[VAR_17_]], [[VAR_17_]], [[VAR_17_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
+// CHECK-DAG:       [[VAR_1_:%.+]] = shape.const_shape [1, 1] : tensor<2xindex>
+// CHECK-DAG:       [[VAR_2_:%.+]] = shape.const_shape [1, 1, 16, 256] : tensor<4xindex>
+// CHECK-DAG:       [[VAR_3_:%.+]] = shape.const_shape [16, 512] : tensor<2xindex>
+// CHECK-DAG:       [[VAR_4_:%.+]] = shape.const_shape [2048] : tensor<1xindex>
+// CHECK-DAG:       [[VAR_5_:%.+]] = shape.const_shape [1024, 256] : tensor<2xindex>
+// CHECK-DAG:       [[VAR_6_:%.+]] = shape.const_shape [1024, 512] : tensor<2xindex>
+// CHECK-DAG:       [[VAR_7_:%.+]] = stablehlo.constant dense<127> : tensor<1xi64>
+// CHECK-DAG:       [[VAR_8_:%.+]] = stablehlo.constant dense<1> : tensor<1xi64>
+// CHECK-DAG:       [[VAR_9_:%.+]] = stablehlo.constant dense<768> : tensor<i64>
+// CHECK-DAG:       [[VAR_10_:%.+]] = stablehlo.constant dense<512> : tensor<i64>
+// CHECK-DAG:       [[VAR_11_:%.+]] = stablehlo.constant dense<256> : tensor<i64>
+// CHECK-DAG:       [[VAR_12_:%.+]] = stablehlo.constant dense<128> : tensor<1xi64>
+// CHECK-DAG:       [[VAR_13_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<2x16x256xf32>
+// CHECK-DAG:       [[VAR_14_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<128x1x16x256xf32>
+// CHECK-DAG:       [[VAR_15_:%.+]] = stablehlo.constant dense<0> : tensor<i64>
+// CHECK-DAG:       [[VAR_16_:%.+]] = stablehlo.constant dense<0> : tensor<1xi64>
+// CHECK-DAG:       [[VAR_17_:%.+]] = stablehlo.constant dense<1> : tensor<i64>
+// CHECK:           [[VAR_18_:%.+]] = stablehlo.dynamic_slice [[VAR_13_]], [[VAR_15_]], [[VAR_15_]], [[VAR_15_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
+// CHECK-DAG:       [[VAR_19_:%.+]] = stablehlo.dynamic_reshape [[VAR_18_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_20_:%.+]] = stablehlo.dynamic_slice [[VAR_13_]], [[VAR_15_]], [[VAR_15_]], [[VAR_15_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
 // CHECK-DAG:       [[VAR_21_:%.+]] = stablehlo.dynamic_reshape [[VAR_20_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_22_:%.+]] = stablehlo.dynamic_slice [[VAR_15_]], [[VAR_17_]], [[VAR_17_]], [[VAR_17_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
+// CHECK-DAG:       [[VAR_22_:%.+]] = stablehlo.dynamic_slice [[VAR_13_]], [[VAR_17_]], [[VAR_15_]], [[VAR_15_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
 // CHECK-NOT: separator of consecutive DAGs
 // CHECK-DAG:       [[VAR_23_:%.+]] = stablehlo.dynamic_reshape [[VAR_22_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_24_:%.+]] = stablehlo.dynamic_slice [[VAR_15_]], [[VAR_19_]], [[VAR_17_]], [[VAR_17_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
+// CHECK-DAG:       [[VAR_24_:%.+]] = stablehlo.dynamic_slice [[VAR_13_]], [[VAR_17_]], [[VAR_15_]], [[VAR_15_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
 // CHECK-NOT: separator of consecutive DAGs
 // CHECK-DAG:       [[VAR_25_:%.+]] = stablehlo.dynamic_reshape [[VAR_24_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_26_:%.+]] = stablehlo.dynamic_slice [[VAR_15_]], [[VAR_19_]], [[VAR_17_]], [[VAR_17_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_27_:%.+]] = stablehlo.dynamic_reshape [[VAR_26_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_28_:%.+]] = stablehlo.slice [[PARAM_2_]] [0:1, 0:1024, 0:512] : (tensor<2x1024x512xf32>) -> tensor<1x1024x512xf32>
-// CHECK-DAG:       [[VAR_29_:%.+]] = stablehlo.slice [[PARAM_2_]] [1:2, 0:1024, 0:512] : (tensor<2x1024x512xf32>) -> tensor<1x1024x512xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_30_:%.+]] = stablehlo.dynamic_reshape [[VAR_28_]], [[VAR_8_]] : (tensor<1x1024x512xf32>, tensor<2xindex>) -> tensor<1024x512xf32>
-// CHECK-DAG:       [[VAR_31_:%.+]] = stablehlo.dynamic_reshape [[VAR_29_]], [[VAR_8_]] : (tensor<1x1024x512xf32>, tensor<2xindex>) -> tensor<1024x512xf32>
-// CHECK-DAG:       [[VAR_32_:%.+]] = stablehlo.slice [[PARAM_3_]] [0:1, 0:1024, 0:256] : (tensor<2x1024x256xf32>) -> tensor<1x1024x256xf32>
-// CHECK-DAG:       [[VAR_33_:%.+]] = stablehlo.slice [[PARAM_3_]] [1:2, 0:1024, 0:256] : (tensor<2x1024x256xf32>) -> tensor<1x1024x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_34_:%.+]] = stablehlo.dynamic_reshape [[VAR_32_]], [[VAR_7_]] : (tensor<1x1024x256xf32>, tensor<2xindex>) -> tensor<1024x256xf32>
-// CHECK-DAG:       [[VAR_35_:%.+]] = stablehlo.dynamic_reshape [[VAR_33_]], [[VAR_7_]] : (tensor<1x1024x256xf32>, tensor<2xindex>) -> tensor<1024x256xf32>
-// CHECK-DAG:       [[VAR_36_:%.+]] = stablehlo.transpose [[VAR_30_]], dims = [1, 0] : (tensor<1024x512xf32>) -> tensor<512x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_37_:%.+]] = stablehlo.transpose [[VAR_34_]], dims = [1, 0] : (tensor<1024x256xf32>) -> tensor<256x1024xf32>
-// CHECK-DAG:       [[VAR_38_:%.+]] = stablehlo.transpose [[VAR_31_]], dims = [1, 0] : (tensor<1024x512xf32>) -> tensor<512x1024xf32>
-// CHECK-DAG:       [[VAR_39_:%.+]] = stablehlo.transpose [[VAR_35_]], dims = [1, 0] : (tensor<1024x256xf32>) -> tensor<256x1024xf32>
-// CHECK-DAG:       [[VAR_40_:%.+]] = stablehlo.slice [[PARAM_1_]] [0:1, 0:2048] : (tensor<2x2048xf32>) -> tensor<1x2048xf32>
-// CHECK-DAG:       [[VAR_41_:%.+]] = stablehlo.slice [[PARAM_1_]] [1:2, 0:2048] : (tensor<2x2048xf32>) -> tensor<1x2048xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_42_:%.+]] = stablehlo.dynamic_reshape [[VAR_40_]], [[VAR_6_]] : (tensor<1x2048xf32>, tensor<1xindex>) -> tensor<2048xf32>
-// CHECK-DAG:       [[VAR_43_:%.+]] = stablehlo.dynamic_reshape [[VAR_41_]], [[VAR_6_]] : (tensor<1x2048xf32>, tensor<1xindex>) -> tensor<2048xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_44_:%.+]] = stablehlo.slice [[VAR_42_]] [0:256] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_45_:%.+]] = stablehlo.slice [[VAR_42_]] [256:512] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_46_:%.+]] = stablehlo.slice [[VAR_42_]] [512:768] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_47_:%.+]] = stablehlo.slice [[VAR_42_]] [768:1024] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_48_:%.+]] = stablehlo.slice [[VAR_42_]] [1024:1280] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_49_:%.+]] = stablehlo.slice [[VAR_42_]] [1280:1536] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_50_:%.+]] = stablehlo.slice [[VAR_42_]] [1536:1792] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_51_:%.+]] = stablehlo.slice [[VAR_42_]] [1792:2048] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_52_:%.+]] = stablehlo.slice [[VAR_43_]] [0:256] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_53_:%.+]] = stablehlo.slice [[VAR_43_]] [256:512] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_54_:%.+]] = stablehlo.slice [[VAR_43_]] [512:768] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_55_:%.+]] = stablehlo.slice [[VAR_43_]] [768:1024] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_56_:%.+]] = stablehlo.slice [[VAR_43_]] [1024:1280] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_57_:%.+]] = stablehlo.slice [[VAR_43_]] [1280:1536] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_58_:%.+]] = stablehlo.slice [[VAR_43_]] [1536:1792] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_59_:%.+]] = stablehlo.slice [[VAR_43_]] [1792:2048] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_60_:%.+]]:4 = stablehlo.while([[VAR_iterArg_:%.+]] = [[VAR_18_]], [[VAR_iterArg_0_:%.+]] = [[VAR_16_]], [[VAR_iterArg_1_:%.+]] = [[VAR_21_]], [[VAR_iterArg_2_:%.+]] = [[VAR_23_]]) : tensor<1xi64>, tensor<128x1x16x256xf32>, tensor<16x256xf32>, tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_26_:%.+]] = stablehlo.slice [[PARAM_2_]] [0:1, 0:1024, 0:512] : (tensor<2x1024x512xf32>) -> tensor<1x1024x512xf32>
+// CHECK-DAG:       [[VAR_27_:%.+]] = stablehlo.slice [[PARAM_2_]] [1:2, 0:1024, 0:512] : (tensor<2x1024x512xf32>) -> tensor<1x1024x512xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_28_:%.+]] = stablehlo.dynamic_reshape [[VAR_26_]], [[VAR_6_]] : (tensor<1x1024x512xf32>, tensor<2xindex>) -> tensor<1024x512xf32>
+// CHECK-DAG:       [[VAR_29_:%.+]] = stablehlo.dynamic_reshape [[VAR_27_]], [[VAR_6_]] : (tensor<1x1024x512xf32>, tensor<2xindex>) -> tensor<1024x512xf32>
+// CHECK-DAG:       [[VAR_30_:%.+]] = stablehlo.slice [[PARAM_3_]] [0:1, 0:1024, 0:256] : (tensor<2x1024x256xf32>) -> tensor<1x1024x256xf32>
+// CHECK-DAG:       [[VAR_31_:%.+]] = stablehlo.slice [[PARAM_3_]] [1:2, 0:1024, 0:256] : (tensor<2x1024x256xf32>) -> tensor<1x1024x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_32_:%.+]] = stablehlo.dynamic_reshape [[VAR_30_]], [[VAR_5_]] : (tensor<1x1024x256xf32>, tensor<2xindex>) -> tensor<1024x256xf32>
+// CHECK-DAG:       [[VAR_33_:%.+]] = stablehlo.dynamic_reshape [[VAR_31_]], [[VAR_5_]] : (tensor<1x1024x256xf32>, tensor<2xindex>) -> tensor<1024x256xf32>
+// CHECK-DAG:       [[VAR_34_:%.+]] = stablehlo.transpose [[VAR_28_]], dims = [1, 0] : (tensor<1024x512xf32>) -> tensor<512x1024xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_35_:%.+]] = stablehlo.transpose [[VAR_32_]], dims = [1, 0] : (tensor<1024x256xf32>) -> tensor<256x1024xf32>
+// CHECK-DAG:       [[VAR_36_:%.+]] = stablehlo.transpose [[VAR_29_]], dims = [1, 0] : (tensor<1024x512xf32>) -> tensor<512x1024xf32>
+// CHECK-DAG:       [[VAR_37_:%.+]] = stablehlo.transpose [[VAR_33_]], dims = [1, 0] : (tensor<1024x256xf32>) -> tensor<256x1024xf32>
+// CHECK-DAG:       [[VAR_38_:%.+]] = stablehlo.slice [[PARAM_1_]] [0:1, 0:2048] : (tensor<2x2048xf32>) -> tensor<1x2048xf32>
+// CHECK-DAG:       [[VAR_39_:%.+]] = stablehlo.slice [[PARAM_1_]] [1:2, 0:2048] : (tensor<2x2048xf32>) -> tensor<1x2048xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_40_:%.+]] = stablehlo.dynamic_reshape [[VAR_38_]], [[VAR_4_]] : (tensor<1x2048xf32>, tensor<1xindex>) -> tensor<2048xf32>
+// CHECK-DAG:       [[VAR_41_:%.+]] = stablehlo.dynamic_reshape [[VAR_39_]], [[VAR_4_]] : (tensor<1x2048xf32>, tensor<1xindex>) -> tensor<2048xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_42_:%.+]] = stablehlo.slice [[VAR_40_]] [0:256] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_43_:%.+]] = stablehlo.slice [[VAR_40_]] [256:512] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_44_:%.+]] = stablehlo.slice [[VAR_40_]] [512:768] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_45_:%.+]] = stablehlo.slice [[VAR_40_]] [768:1024] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_46_:%.+]] = stablehlo.slice [[VAR_40_]] [1024:1280] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_47_:%.+]] = stablehlo.slice [[VAR_40_]] [1280:1536] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_48_:%.+]] = stablehlo.slice [[VAR_40_]] [1536:1792] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_49_:%.+]] = stablehlo.slice [[VAR_40_]] [1792:2048] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_50_:%.+]] = stablehlo.slice [[VAR_41_]] [0:256] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_51_:%.+]] = stablehlo.slice [[VAR_41_]] [256:512] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_52_:%.+]] = stablehlo.slice [[VAR_41_]] [512:768] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_53_:%.+]] = stablehlo.slice [[VAR_41_]] [768:1024] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_54_:%.+]] = stablehlo.slice [[VAR_41_]] [1024:1280] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_55_:%.+]] = stablehlo.slice [[VAR_41_]] [1280:1536] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_56_:%.+]] = stablehlo.slice [[VAR_41_]] [1536:1792] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_57_:%.+]] = stablehlo.slice [[VAR_41_]] [1792:2048] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_58_:%.+]]:4 = stablehlo.while([[VAR_iterArg_:%.+]] = [[VAR_16_]], [[VAR_iterArg_0_:%.+]] = [[VAR_14_]], [[VAR_iterArg_1_:%.+]] = [[VAR_19_]], [[VAR_iterArg_2_:%.+]] = [[VAR_21_]]) : tensor<1xi64>, tensor<128x1x16x256xf32>, tensor<16x256xf32>, tensor<16x256xf32>
 // CHECK:            cond {
-// CHECK:             [[VAR_63_:%.+]] = stablehlo.compare  LT, [[VAR_iterArg_]], [[VAR_14_]],  NOTYPE : (tensor<1xi64>, tensor<1xi64>) -> tensor<1xi1>
-// CHECK:             [[VAR_64_:%.+]] = stablehlo.reshape [[VAR_63_]] : (tensor<1xi1>) -> tensor<i1>
-// CHECK:             stablehlo.return [[VAR_64_]] : tensor<i1>
+// CHECK:             [[VAR_61_:%.+]] = stablehlo.compare  LT, [[VAR_iterArg_]], [[VAR_12_]],  NOTYPE : (tensor<1xi64>, tensor<1xi64>) -> tensor<1xi1>
+// CHECK:             [[VAR_62_:%.+]] = stablehlo.reshape [[VAR_61_]] : (tensor<1xi1>) -> tensor<i1>
+// CHECK:             stablehlo.return [[VAR_62_]] : tensor<i1>
 // CHECK:           } do {
-// CHECK:             [[VAR_63_1_:%.+]] = stablehlo.reshape [[VAR_iterArg_]] : (tensor<1xi64>) -> tensor<i64>
-// CHECK:             [[VAR_64_1_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_63_1_]], [[VAR_17_]], [[VAR_17_]], sizes = [1, 16, 512] : (tensor<128x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
-// CHECK:             [[VAR_65_:%.+]] = stablehlo.dynamic_reshape [[VAR_64_1_]], [[VAR_5_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
-// CHECK-DAG:         [[VAR_66_:%.+]] = stablehlo.broadcast_in_dim [[VAR_65_]], dims = [0, 1] : (tensor<16x512xf32>) -> tensor<16x512xf32>
-// CHECK-DAG:         [[VAR_67_:%.+]] = stablehlo.broadcast_in_dim [[VAR_36_]], dims = [0, 1] : (tensor<512x1024xf32>) -> tensor<512x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_68_:%.+]] = stablehlo.dot [[VAR_66_]], [[VAR_67_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:         [[VAR_69_:%.+]] = stablehlo.broadcast_in_dim [[VAR_iterArg_1_]], dims = [0, 1] : (tensor<16x256xf32>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_70_:%.+]] = stablehlo.broadcast_in_dim [[VAR_37_]], dims = [0, 1] : (tensor<256x1024xf32>) -> tensor<256x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_71_:%.+]] = stablehlo.dot [[VAR_69_]], [[VAR_70_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:         [[VAR_72_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_68_]], [[VAR_4_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:             [[VAR_73_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_71_]], [[VAR_4_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:             [[VAR_74_:%.+]] = stablehlo.add [[VAR_72_]], [[VAR_73_]] : tensor<16x1024xf32>
-// CHECK-DAG:         [[VAR_75_:%.+]] = stablehlo.dynamic_slice [[VAR_74_]], [[VAR_17_]], [[VAR_17_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_76_:%.+]] = stablehlo.dynamic_slice [[VAR_74_]], [[VAR_17_]], [[VAR_13_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_77_:%.+]] = stablehlo.dynamic_slice [[VAR_74_]], [[VAR_17_]], [[VAR_12_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_78_:%.+]] = stablehlo.dynamic_slice [[VAR_74_]], [[VAR_17_]], [[VAR_11_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_79_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_75_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_80_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_44_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_81_:%.+]] = stablehlo.add [[VAR_79_]], [[VAR_80_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_82_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_81_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_83_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_48_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
+// CHECK:             [[VAR_61_1_:%.+]] = stablehlo.reshape [[VAR_iterArg_]] : (tensor<1xi64>) -> tensor<i64>
+// CHECK:             [[VAR_62_1_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_61_1_]], [[VAR_15_]], [[VAR_15_]], sizes = [1, 16, 512] : (tensor<128x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
+// CHECK:             [[VAR_63_:%.+]] = stablehlo.dynamic_reshape [[VAR_62_1_]], [[VAR_3_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
+// CHECK-DAG:         [[VAR_64_:%.+]] = stablehlo.dot [[VAR_63_]], [[VAR_34_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
+// CHECK-DAG:         [[VAR_65_:%.+]] = stablehlo.dot [[VAR_iterArg_1_]], [[VAR_35_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
+// CHECK:             [[VAR_66_:%.+]] = stablehlo.add [[VAR_64_]], [[VAR_65_]] : tensor<16x1024xf32>
+// CHECK-DAG:         [[VAR_67_:%.+]] = stablehlo.dynamic_slice [[VAR_66_]], [[VAR_15_]], [[VAR_15_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_68_:%.+]] = stablehlo.dynamic_slice [[VAR_66_]], [[VAR_15_]], [[VAR_11_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_69_:%.+]] = stablehlo.dynamic_slice [[VAR_66_]], [[VAR_15_]], [[VAR_10_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_70_:%.+]] = stablehlo.dynamic_slice [[VAR_66_]], [[VAR_15_]], [[VAR_9_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_71_:%.+]] = stablehlo.broadcast_in_dim [[VAR_42_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:         [[VAR_72_:%.+]] = stablehlo.add [[VAR_67_]], [[VAR_71_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_73_:%.+]] = stablehlo.broadcast_in_dim [[VAR_46_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:             [[VAR_74_:%.+]] = stablehlo.add [[VAR_72_]], [[VAR_73_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_75_:%.+]] = stablehlo.logistic [[VAR_74_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_76_:%.+]] = stablehlo.broadcast_in_dim [[VAR_44_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:         [[VAR_77_:%.+]] = stablehlo.add [[VAR_69_]], [[VAR_76_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_78_:%.+]] = stablehlo.broadcast_in_dim [[VAR_48_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:             [[VAR_79_:%.+]] = stablehlo.add [[VAR_77_]], [[VAR_78_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_80_:%.+]] = stablehlo.logistic [[VAR_79_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_81_:%.+]] = stablehlo.broadcast_in_dim [[VAR_45_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:         [[VAR_82_:%.+]] = stablehlo.add [[VAR_70_]], [[VAR_81_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_83_:%.+]] = stablehlo.broadcast_in_dim [[VAR_49_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
 // CHECK:             [[VAR_84_:%.+]] = stablehlo.add [[VAR_82_]], [[VAR_83_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_85_:%.+]] = stablehlo.logistic [[VAR_84_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_86_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_77_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_87_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_46_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_88_:%.+]] = stablehlo.add [[VAR_86_]], [[VAR_87_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_89_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_88_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_90_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_50_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_91_:%.+]] = stablehlo.add [[VAR_89_]], [[VAR_90_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_92_:%.+]] = stablehlo.logistic [[VAR_91_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_93_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_78_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_94_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_47_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_95_:%.+]] = stablehlo.add [[VAR_93_]], [[VAR_94_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_96_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_95_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_97_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_51_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_98_:%.+]] = stablehlo.add [[VAR_96_]], [[VAR_97_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_99_:%.+]] = stablehlo.tanh [[VAR_98_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_100_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_92_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_101_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_iterArg_2_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_102_:%.+]] = stablehlo.multiply [[VAR_100_]], [[VAR_101_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_103_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_85_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_104_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_99_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_105_:%.+]] = stablehlo.multiply [[VAR_103_]], [[VAR_104_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_106_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_102_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_107_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_105_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_108_:%.+]] = stablehlo.add [[VAR_106_]], [[VAR_107_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_109_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_76_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_110_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_45_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_111_:%.+]] = stablehlo.add [[VAR_109_]], [[VAR_110_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_112_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_111_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_113_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_49_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_114_:%.+]] = stablehlo.add [[VAR_112_]], [[VAR_113_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_115_:%.+]] = stablehlo.logistic [[VAR_114_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_116_:%.+]] = stablehlo.tanh [[VAR_108_]] : tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_117_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_115_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_118_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_116_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_119_:%.+]] = stablehlo.multiply [[VAR_117_]], [[VAR_118_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_120_:%.+]] = stablehlo.dynamic_reshape [[VAR_119_]], [[VAR_3_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
-// CHECK-DAG:         [[VAR_121_:%.+]] = stablehlo.dynamic_reshape [[VAR_iterArg_]], [[VAR_2_]] : (tensor<1xi64>, tensor<2xindex>) -> tensor<1x1xi64>
-// CHECK:             [[VAR_122_:%.+]] = "stablehlo.scatter"([[VAR_iterArg_0_]], [[VAR_121_]], [[VAR_120_]]) ({
+// CHECK-DAG:         [[VAR_85_:%.+]] = stablehlo.tanh [[VAR_84_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_86_:%.+]] = stablehlo.multiply [[VAR_80_]], [[VAR_iterArg_2_]] : tensor<16x256xf32>
+// CHECK:             [[VAR_87_:%.+]] = stablehlo.multiply [[VAR_75_]], [[VAR_85_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_88_:%.+]] = stablehlo.add [[VAR_86_]], [[VAR_87_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_89_:%.+]] = stablehlo.broadcast_in_dim [[VAR_43_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:         [[VAR_90_:%.+]] = stablehlo.add [[VAR_68_]], [[VAR_89_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_91_:%.+]] = stablehlo.broadcast_in_dim [[VAR_47_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:             [[VAR_92_:%.+]] = stablehlo.add [[VAR_90_]], [[VAR_91_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_93_:%.+]] = stablehlo.logistic [[VAR_92_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_94_:%.+]] = stablehlo.tanh [[VAR_88_]] : tensor<16x256xf32>
+// CHECK:             [[VAR_95_:%.+]] = stablehlo.multiply [[VAR_93_]], [[VAR_94_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_96_:%.+]] = stablehlo.dynamic_reshape [[VAR_95_]], [[VAR_2_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
+// CHECK-DAG:         [[VAR_97_:%.+]] = stablehlo.dynamic_reshape [[VAR_iterArg_]], [[VAR_1_]] : (tensor<1xi64>, tensor<2xindex>) -> tensor<1x1xi64>
+// CHECK:             [[VAR_98_:%.+]] = "stablehlo.scatter"([[VAR_iterArg_0_]], [[VAR_97_]], [[VAR_96_]]) ({
 // CHECK:             ^bb0([[arg4_:%.+]]: tensor<f32>, [[arg5_:%.+]]: tensor<f32>):
 // CHECK:               stablehlo.return [[arg5_]] : tensor<f32>
 // CHECK:             }) {indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [1, 2, 3], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 1>, unique_indices = false} : (tensor<128x1x16x256xf32>, tensor<1x1xi64>, tensor<1x1x16x256xf32>) -> tensor<128x1x16x256xf32>
-// CHECK-DAG:         [[VAR_123_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_iterArg_]], [[VAR_1_]], dims = [0] : (tensor<1xi64>, tensor<1xindex>) -> tensor<1xi64>
-// CHECK-DAG:         [[VAR_124_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_10_]], [[VAR_1_]], dims = [0] : (tensor<1xi64>, tensor<1xindex>) -> tensor<1xi64>
-// CHECK:             [[VAR_125_:%.+]] = stablehlo.add [[VAR_123_]], [[VAR_124_]] : tensor<1xi64>
-// CHECK:             stablehlo.return [[VAR_125_]], [[VAR_122_]], [[VAR_119_]], [[VAR_108_]] : tensor<1xi64>, tensor<128x1x16x256xf32>, tensor<16x256xf32>, tensor<16x256xf32>
+// CHECK:             [[VAR_99_:%.+]] = stablehlo.add [[VAR_iterArg_]], [[VAR_8_]] : tensor<1xi64>
+// CHECK:             stablehlo.return [[VAR_99_]], [[VAR_98_]], [[VAR_95_]], [[VAR_88_]] : tensor<1xi64>, tensor<128x1x16x256xf32>, tensor<16x256xf32>, tensor<16x256xf32>
 // CHECK:           }
-// CHECK:           [[VAR_61_:%.+]]:4 = stablehlo.while([[VAR_iterArg_1_:%.+]] = [[VAR_9_]], [[VAR_iterArg_0_1_:%.+]] = [[VAR_16_]], [[VAR_iterArg_1_1_:%.+]] = [[VAR_25_]], [[VAR_iterArg_2_1_:%.+]] = [[VAR_27_]]) : tensor<1xi64>, tensor<128x1x16x256xf32>, tensor<16x256xf32>, tensor<16x256xf32>
+// CHECK:           [[VAR_59_:%.+]]:4 = stablehlo.while([[VAR_iterArg_1_:%.+]] = [[VAR_7_]], [[VAR_iterArg_0_1_:%.+]] = [[VAR_14_]], [[VAR_iterArg_1_1_:%.+]] = [[VAR_23_]], [[VAR_iterArg_2_1_:%.+]] = [[VAR_25_]]) : tensor<1xi64>, tensor<128x1x16x256xf32>, tensor<16x256xf32>, tensor<16x256xf32>
 // CHECK:            cond {
-// CHECK:             [[VAR_63_2_:%.+]] = stablehlo.compare  GE, [[VAR_iterArg_1_]], [[VAR_18_]],  NOTYPE : (tensor<1xi64>, tensor<1xi64>) -> tensor<1xi1>
-// CHECK:             [[VAR_64_2_:%.+]] = stablehlo.reshape [[VAR_63_2_]] : (tensor<1xi1>) -> tensor<i1>
-// CHECK:             stablehlo.return [[VAR_64_2_]] : tensor<i1>
+// CHECK:             [[VAR_61_2_:%.+]] = stablehlo.compare  GE, [[VAR_iterArg_1_]], [[VAR_16_]],  NOTYPE : (tensor<1xi64>, tensor<1xi64>) -> tensor<1xi1>
+// CHECK:             [[VAR_62_2_:%.+]] = stablehlo.reshape [[VAR_61_2_]] : (tensor<1xi1>) -> tensor<i1>
+// CHECK:             stablehlo.return [[VAR_62_2_]] : tensor<i1>
 // CHECK:           } do {
-// CHECK:             [[VAR_63_3_:%.+]] = stablehlo.reshape [[VAR_iterArg_1_]] : (tensor<1xi64>) -> tensor<i64>
-// CHECK:             [[VAR_64_3_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_63_3_]], [[VAR_17_]], [[VAR_17_]], sizes = [1, 16, 512] : (tensor<128x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
-// CHECK:             [[VAR_65_1_:%.+]] = stablehlo.dynamic_reshape [[VAR_64_3_]], [[VAR_5_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
-// CHECK-DAG:         [[VAR_66_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_65_1_]], dims = [0, 1] : (tensor<16x512xf32>) -> tensor<16x512xf32>
-// CHECK-DAG:         [[VAR_67_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_38_]], dims = [0, 1] : (tensor<512x1024xf32>) -> tensor<512x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_68_1_:%.+]] = stablehlo.dot [[VAR_66_1_]], [[VAR_67_1_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:         [[VAR_69_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_iterArg_1_1_]], dims = [0, 1] : (tensor<16x256xf32>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_70_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_39_]], dims = [0, 1] : (tensor<256x1024xf32>) -> tensor<256x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_71_1_:%.+]] = stablehlo.dot [[VAR_69_1_]], [[VAR_70_1_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:         [[VAR_72_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_68_1_]], [[VAR_4_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:             [[VAR_73_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_71_1_]], [[VAR_4_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:             [[VAR_74_1_:%.+]] = stablehlo.add [[VAR_72_1_]], [[VAR_73_1_]] : tensor<16x1024xf32>
-// CHECK-DAG:         [[VAR_75_1_:%.+]] = stablehlo.dynamic_slice [[VAR_74_1_]], [[VAR_17_]], [[VAR_17_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_76_1_:%.+]] = stablehlo.dynamic_slice [[VAR_74_1_]], [[VAR_17_]], [[VAR_13_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_77_1_:%.+]] = stablehlo.dynamic_slice [[VAR_74_1_]], [[VAR_17_]], [[VAR_12_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_78_1_:%.+]] = stablehlo.dynamic_slice [[VAR_74_1_]], [[VAR_17_]], [[VAR_11_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_79_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_75_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_80_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_52_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_81_1_:%.+]] = stablehlo.add [[VAR_79_1_]], [[VAR_80_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_82_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_81_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_83_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_56_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
+// CHECK:             [[VAR_61_3_:%.+]] = stablehlo.reshape [[VAR_iterArg_1_]] : (tensor<1xi64>) -> tensor<i64>
+// CHECK:             [[VAR_62_3_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_61_3_]], [[VAR_15_]], [[VAR_15_]], sizes = [1, 16, 512] : (tensor<128x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
+// CHECK:             [[VAR_63_1_:%.+]] = stablehlo.dynamic_reshape [[VAR_62_3_]], [[VAR_3_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
+// CHECK-DAG:         [[VAR_64_1_:%.+]] = stablehlo.dot [[VAR_63_1_]], [[VAR_36_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
+// CHECK-DAG:         [[VAR_65_1_:%.+]] = stablehlo.dot [[VAR_iterArg_1_1_]], [[VAR_37_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
+// CHECK:             [[VAR_66_1_:%.+]] = stablehlo.add [[VAR_64_1_]], [[VAR_65_1_]] : tensor<16x1024xf32>
+// CHECK-DAG:         [[VAR_67_1_:%.+]] = stablehlo.dynamic_slice [[VAR_66_1_]], [[VAR_15_]], [[VAR_15_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_68_1_:%.+]] = stablehlo.dynamic_slice [[VAR_66_1_]], [[VAR_15_]], [[VAR_11_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_69_1_:%.+]] = stablehlo.dynamic_slice [[VAR_66_1_]], [[VAR_15_]], [[VAR_10_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_70_1_:%.+]] = stablehlo.dynamic_slice [[VAR_66_1_]], [[VAR_15_]], [[VAR_9_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_71_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_50_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:         [[VAR_72_1_:%.+]] = stablehlo.add [[VAR_67_1_]], [[VAR_71_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_73_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_54_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:             [[VAR_74_1_:%.+]] = stablehlo.add [[VAR_72_1_]], [[VAR_73_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_75_1_:%.+]] = stablehlo.logistic [[VAR_74_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_76_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_52_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:         [[VAR_77_1_:%.+]] = stablehlo.add [[VAR_69_1_]], [[VAR_76_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_78_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_56_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:             [[VAR_79_1_:%.+]] = stablehlo.add [[VAR_77_1_]], [[VAR_78_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_80_1_:%.+]] = stablehlo.logistic [[VAR_79_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_81_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_53_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:         [[VAR_82_1_:%.+]] = stablehlo.add [[VAR_70_1_]], [[VAR_81_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_83_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_57_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
 // CHECK:             [[VAR_84_1_:%.+]] = stablehlo.add [[VAR_82_1_]], [[VAR_83_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_85_1_:%.+]] = stablehlo.logistic [[VAR_84_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_86_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_77_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_87_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_54_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_88_1_:%.+]] = stablehlo.add [[VAR_86_1_]], [[VAR_87_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_89_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_88_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_90_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_58_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_91_1_:%.+]] = stablehlo.add [[VAR_89_1_]], [[VAR_90_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_92_1_:%.+]] = stablehlo.logistic [[VAR_91_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_93_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_78_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_94_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_55_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_95_1_:%.+]] = stablehlo.add [[VAR_93_1_]], [[VAR_94_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_96_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_95_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_97_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_59_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_98_1_:%.+]] = stablehlo.add [[VAR_96_1_]], [[VAR_97_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_99_1_:%.+]] = stablehlo.tanh [[VAR_98_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_100_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_92_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_101_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_iterArg_2_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_102_1_:%.+]] = stablehlo.multiply [[VAR_100_1_]], [[VAR_101_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_103_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_85_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_104_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_99_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_105_1_:%.+]] = stablehlo.multiply [[VAR_103_1_]], [[VAR_104_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_106_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_102_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_107_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_105_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_108_1_:%.+]] = stablehlo.add [[VAR_106_1_]], [[VAR_107_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_109_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_76_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_110_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_53_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_111_1_:%.+]] = stablehlo.add [[VAR_109_1_]], [[VAR_110_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_112_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_111_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_113_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_57_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_114_1_:%.+]] = stablehlo.add [[VAR_112_1_]], [[VAR_113_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_115_1_:%.+]] = stablehlo.logistic [[VAR_114_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_116_1_:%.+]] = stablehlo.tanh [[VAR_108_1_]] : tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:         [[VAR_117_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_115_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_118_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_116_1_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:             [[VAR_119_1_:%.+]] = stablehlo.multiply [[VAR_117_1_]], [[VAR_118_1_]] : tensor<16x256xf32>
-// CHECK-DAG:         [[VAR_120_1_:%.+]] = stablehlo.dynamic_reshape [[VAR_119_1_]], [[VAR_3_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
-// CHECK-DAG:         [[VAR_121_1_:%.+]] = stablehlo.dynamic_reshape [[VAR_iterArg_1_]], [[VAR_2_]] : (tensor<1xi64>, tensor<2xindex>) -> tensor<1x1xi64>
-// CHECK:             [[VAR_122_1_:%.+]] = "stablehlo.scatter"([[VAR_iterArg_0_1_]], [[VAR_121_1_]], [[VAR_120_1_]]) ({
-// CHECK:             ^bb0([[arg4_:%.+]]: tensor<f32>, [[arg5_:%.+]]: tensor<f32>):
+// CHECK-DAG:         [[VAR_85_1_:%.+]] = stablehlo.tanh [[VAR_84_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_86_1_:%.+]] = stablehlo.multiply [[VAR_80_1_]], [[VAR_iterArg_2_1_]] : tensor<16x256xf32>
+// CHECK:             [[VAR_87_1_:%.+]] = stablehlo.multiply [[VAR_75_1_]], [[VAR_85_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_88_1_:%.+]] = stablehlo.add [[VAR_86_1_]], [[VAR_87_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_89_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_51_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:         [[VAR_90_1_:%.+]] = stablehlo.add [[VAR_68_1_]], [[VAR_89_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_91_1_:%.+]] = stablehlo.broadcast_in_dim [[VAR_55_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:             [[VAR_92_1_:%.+]] = stablehlo.add [[VAR_90_1_]], [[VAR_91_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_93_1_:%.+]] = stablehlo.logistic [[VAR_92_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_94_1_:%.+]] = stablehlo.tanh [[VAR_88_1_]] : tensor<16x256xf32>
+// CHECK:             [[VAR_95_1_:%.+]] = stablehlo.multiply [[VAR_93_1_]], [[VAR_94_1_]] : tensor<16x256xf32>
+// CHECK-DAG:         [[VAR_96_1_:%.+]] = stablehlo.dynamic_reshape [[VAR_95_1_]], [[VAR_2_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
+// CHECK-DAG:         [[VAR_97_1_:%.+]] = stablehlo.dynamic_reshape [[VAR_iterArg_1_]], [[VAR_1_]] : (tensor<1xi64>, tensor<2xindex>) -> tensor<1x1xi64>
+// CHECK:             [[VAR_98_1_:%.+]] = "stablehlo.scatter"([[VAR_iterArg_0_1_]], [[VAR_97_1_]], [[VAR_96_1_]]) ({
+// CHECK:             ^bb0([[arg4_]]: tensor<f32>, [[arg5_]]: tensor<f32>):
 // CHECK:               stablehlo.return [[arg5_]] : tensor<f32>
 // CHECK:             }) {indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [1, 2, 3], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 1>, unique_indices = false} : (tensor<128x1x16x256xf32>, tensor<1x1xi64>, tensor<1x1x16x256xf32>) -> tensor<128x1x16x256xf32>
-// CHECK-DAG:         [[VAR_123_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_iterArg_1_]], [[VAR_1_]], dims = [0] : (tensor<1xi64>, tensor<1xindex>) -> tensor<1xi64>
-// CHECK-DAG:         [[VAR_124_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_10_]], [[VAR_1_]], dims = [0] : (tensor<1xi64>, tensor<1xindex>) -> tensor<1xi64>
-// CHECK:             [[VAR_125_1_:%.+]] = stablehlo.subtract [[VAR_123_1_]], [[VAR_124_1_]] : tensor<1xi64>
-// CHECK:             stablehlo.return [[VAR_125_1_]], [[VAR_122_1_]], [[VAR_119_1_]], [[VAR_108_1_]] : tensor<1xi64>, tensor<128x1x16x256xf32>, tensor<16x256xf32>, tensor<16x256xf32>
+// CHECK:             [[VAR_99_1_:%.+]] = stablehlo.subtract [[VAR_iterArg_1_]], [[VAR_8_]] : tensor<1xi64>
+// CHECK:             stablehlo.return [[VAR_99_1_]], [[VAR_98_1_]], [[VAR_95_1_]], [[VAR_88_1_]] : tensor<1xi64>, tensor<128x1x16x256xf32>, tensor<16x256xf32>, tensor<16x256xf32>
 // CHECK:           }
-// CHECK:           [[VAR_62_:%.+]] = stablehlo.concatenate [[VAR_60_]]#1, [[VAR_61_]]#1, dim = 1 : (tensor<128x1x16x256xf32>, tensor<128x1x16x256xf32>) -> tensor<128x2x16x256xf32>
-// CHECK:           return [[VAR_62_]] : tensor<128x2x16x256xf32>
+// CHECK:           [[VAR_60_:%.+]] = stablehlo.concatenate [[VAR_58_]]#1, [[VAR_59_]]#1, dim = 1 : (tensor<128x1x16x256xf32>, tensor<128x1x16x256xf32>) -> tensor<128x2x16x256xf32>
+// CHECK:           return [[VAR_60_]] : tensor<128x2x16x256xf32>
 // CHECK:         }
 }
\ No newline at end of file
diff --git a/test/mlir/conversion/onnx_to_stablehlo/RNN/LSTM.mlir b/test/mlir/conversion/onnx_to_stablehlo/RNN/LSTM.mlir
index ee62fd81..48ddae60 100644
--- a/test/mlir/conversion/onnx_to_stablehlo/RNN/LSTM.mlir
+++ b/test/mlir/conversion/onnx_to_stablehlo/RNN/LSTM.mlir
@@ -8,326 +8,229 @@ func.func @test_lstm(%arg0 : tensor<2x16x512xf32>, %arg1 : tensor<2x2048xf32>, %
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<2x16x512xf32>, [[PARAM_1_:%.+]]: tensor<2x2048xf32>, [[PARAM_2_:%.+]]: tensor<2x1024x512xf32>, [[PARAM_3_:%.+]]: tensor<2x1024x256xf32>) -> tensor<2x2x16x256xf32> {
 // CHECK-DAG:       [[VAR_0_:%.+]] = shape.const_shape [16, 256] : tensor<2xindex>
 // CHECK-DAG:       [[VAR_1_:%.+]] = shape.const_shape [1, 1, 16, 256] : tensor<4xindex>
-// CHECK-DAG:       [[VAR_2_:%.+]] = shape.const_shape [16, 1024] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_3_:%.+]] = shape.const_shape [16, 512] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_4_:%.+]] = shape.const_shape [2048] : tensor<1xindex>
-// CHECK-DAG:       [[VAR_5_:%.+]] = shape.const_shape [1024, 256] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_6_:%.+]] = shape.const_shape [1024, 512] : tensor<2xindex>
-// CHECK-DAG:       [[VAR_7_:%.+]] = stablehlo.constant dense<1> : tensor<1xi64>
-// CHECK-DAG:       [[VAR_8_:%.+]] = stablehlo.constant dense<768> : tensor<i64>
-// CHECK-DAG:       [[VAR_9_:%.+]] = stablehlo.constant dense<512> : tensor<i64>
-// CHECK-DAG:       [[VAR_10_:%.+]] = stablehlo.constant dense<256> : tensor<i64>
-// CHECK-DAG:       [[VAR_11_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<2x16x256xf32>
-// CHECK-DAG:       [[VAR_12_:%.+]] = stablehlo.constant dense<0> : tensor<i64>
-// CHECK-DAG:       [[VAR_13_:%.+]] = stablehlo.constant dense<0> : tensor<1xi64>
-// CHECK-DAG:       [[VAR_14_:%.+]] = stablehlo.constant dense<1> : tensor<i64>
-// CHECK:           [[VAR_15_:%.+]] = stablehlo.dynamic_slice [[VAR_11_]], [[VAR_12_]], [[VAR_12_]], [[VAR_12_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
-// CHECK-DAG:       [[VAR_16_:%.+]] = stablehlo.dynamic_reshape [[VAR_15_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_17_:%.+]] = stablehlo.dynamic_slice [[VAR_11_]], [[VAR_12_]], [[VAR_12_]], [[VAR_12_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_18_:%.+]] = stablehlo.dynamic_reshape [[VAR_17_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_19_:%.+]] = stablehlo.dynamic_slice [[VAR_11_]], [[VAR_14_]], [[VAR_12_]], [[VAR_12_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_20_:%.+]] = stablehlo.dynamic_reshape [[VAR_19_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_21_:%.+]] = stablehlo.dynamic_slice [[VAR_11_]], [[VAR_14_]], [[VAR_12_]], [[VAR_12_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_22_:%.+]] = stablehlo.dynamic_reshape [[VAR_21_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_23_:%.+]] = stablehlo.slice [[PARAM_2_]] [0:1, 0:1024, 0:512] : (tensor<2x1024x512xf32>) -> tensor<1x1024x512xf32>
-// CHECK-DAG:       [[VAR_24_:%.+]] = stablehlo.slice [[PARAM_2_]] [1:2, 0:1024, 0:512] : (tensor<2x1024x512xf32>) -> tensor<1x1024x512xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_25_:%.+]] = stablehlo.dynamic_reshape [[VAR_23_]], [[VAR_6_]] : (tensor<1x1024x512xf32>, tensor<2xindex>) -> tensor<1024x512xf32>
-// CHECK-DAG:       [[VAR_26_:%.+]] = stablehlo.dynamic_reshape [[VAR_24_]], [[VAR_6_]] : (tensor<1x1024x512xf32>, tensor<2xindex>) -> tensor<1024x512xf32>
-// CHECK-DAG:       [[VAR_27_:%.+]] = stablehlo.slice [[PARAM_3_]] [0:1, 0:1024, 0:256] : (tensor<2x1024x256xf32>) -> tensor<1x1024x256xf32>
-// CHECK-DAG:       [[VAR_28_:%.+]] = stablehlo.slice [[PARAM_3_]] [1:2, 0:1024, 0:256] : (tensor<2x1024x256xf32>) -> tensor<1x1024x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_29_:%.+]] = stablehlo.dynamic_reshape [[VAR_27_]], [[VAR_5_]] : (tensor<1x1024x256xf32>, tensor<2xindex>) -> tensor<1024x256xf32>
-// CHECK-DAG:       [[VAR_30_:%.+]] = stablehlo.dynamic_reshape [[VAR_28_]], [[VAR_5_]] : (tensor<1x1024x256xf32>, tensor<2xindex>) -> tensor<1024x256xf32>
-// CHECK-DAG:       [[VAR_31_:%.+]] = stablehlo.transpose [[VAR_25_]], dims = [1, 0] : (tensor<1024x512xf32>) -> tensor<512x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_32_:%.+]] = stablehlo.transpose [[VAR_29_]], dims = [1, 0] : (tensor<1024x256xf32>) -> tensor<256x1024xf32>
-// CHECK-DAG:       [[VAR_33_:%.+]] = stablehlo.transpose [[VAR_26_]], dims = [1, 0] : (tensor<1024x512xf32>) -> tensor<512x1024xf32>
-// CHECK-DAG:       [[VAR_34_:%.+]] = stablehlo.transpose [[VAR_30_]], dims = [1, 0] : (tensor<1024x256xf32>) -> tensor<256x1024xf32>
-// CHECK-DAG:       [[VAR_35_:%.+]] = stablehlo.slice [[PARAM_1_]] [0:1, 0:2048] : (tensor<2x2048xf32>) -> tensor<1x2048xf32>
-// CHECK-DAG:       [[VAR_36_:%.+]] = stablehlo.slice [[PARAM_1_]] [1:2, 0:2048] : (tensor<2x2048xf32>) -> tensor<1x2048xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_37_:%.+]] = stablehlo.dynamic_reshape [[VAR_35_]], [[VAR_4_]] : (tensor<1x2048xf32>, tensor<1xindex>) -> tensor<2048xf32>
-// CHECK-DAG:       [[VAR_38_:%.+]] = stablehlo.dynamic_reshape [[VAR_36_]], [[VAR_4_]] : (tensor<1x2048xf32>, tensor<1xindex>) -> tensor<2048xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_39_:%.+]] = stablehlo.slice [[VAR_37_]] [0:256] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_40_:%.+]] = stablehlo.slice [[VAR_37_]] [256:512] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_41_:%.+]] = stablehlo.slice [[VAR_37_]] [512:768] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_42_:%.+]] = stablehlo.slice [[VAR_37_]] [768:1024] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_43_:%.+]] = stablehlo.slice [[VAR_37_]] [1024:1280] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_44_:%.+]] = stablehlo.slice [[VAR_37_]] [1280:1536] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_45_:%.+]] = stablehlo.slice [[VAR_37_]] [1536:1792] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_46_:%.+]] = stablehlo.slice [[VAR_37_]] [1792:2048] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_47_:%.+]] = stablehlo.slice [[VAR_38_]] [0:256] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_48_:%.+]] = stablehlo.slice [[VAR_38_]] [256:512] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_49_:%.+]] = stablehlo.slice [[VAR_38_]] [512:768] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_50_:%.+]] = stablehlo.slice [[VAR_38_]] [768:1024] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_51_:%.+]] = stablehlo.slice [[VAR_38_]] [1024:1280] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_52_:%.+]] = stablehlo.slice [[VAR_38_]] [1280:1536] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_53_:%.+]] = stablehlo.slice [[VAR_38_]] [1536:1792] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_54_:%.+]] = stablehlo.slice [[VAR_38_]] [1792:2048] : (tensor<2048xf32>) -> tensor<256xf32>
-// CHECK-DAG:       [[VAR_55_:%.+]] = stablehlo.reshape [[VAR_13_]] : (tensor<1xi64>) -> tensor<i64>
-// CHECK:           [[VAR_56_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_55_]], [[VAR_12_]], [[VAR_12_]], sizes = [1, 16, 512] : (tensor<2x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
-// CHECK:           [[VAR_57_:%.+]] = stablehlo.dynamic_reshape [[VAR_56_]], [[VAR_3_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
-// CHECK-DAG:       [[VAR_58_:%.+]] = stablehlo.broadcast_in_dim [[VAR_57_]], dims = [0, 1] : (tensor<16x512xf32>) -> tensor<16x512xf32>
-// CHECK-DAG:       [[VAR_59_:%.+]] = stablehlo.broadcast_in_dim [[VAR_31_]], dims = [0, 1] : (tensor<512x1024xf32>) -> tensor<512x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_60_:%.+]] = stablehlo.dot [[VAR_58_]], [[VAR_59_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_61_:%.+]] = stablehlo.broadcast_in_dim [[VAR_16_]], dims = [0, 1] : (tensor<16x256xf32>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_62_:%.+]] = stablehlo.broadcast_in_dim [[VAR_32_]], dims = [0, 1] : (tensor<256x1024xf32>) -> tensor<256x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_63_:%.+]] = stablehlo.dot [[VAR_61_]], [[VAR_62_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_64_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_60_]], [[VAR_2_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:           [[VAR_65_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_63_]], [[VAR_2_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:           [[VAR_66_:%.+]] = stablehlo.add [[VAR_64_]], [[VAR_65_]] : tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_67_:%.+]] = stablehlo.dynamic_slice [[VAR_66_]], [[VAR_12_]], [[VAR_12_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_68_:%.+]] = stablehlo.dynamic_slice [[VAR_66_]], [[VAR_12_]], [[VAR_10_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_69_:%.+]] = stablehlo.dynamic_slice [[VAR_66_]], [[VAR_12_]], [[VAR_9_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_70_:%.+]] = stablehlo.dynamic_slice [[VAR_66_]], [[VAR_12_]], [[VAR_8_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_71_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_67_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_72_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_39_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_73_:%.+]] = stablehlo.add [[VAR_71_]], [[VAR_72_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_74_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_73_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_75_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_43_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_76_:%.+]] = stablehlo.add [[VAR_74_]], [[VAR_75_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_77_:%.+]] = stablehlo.logistic [[VAR_76_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_78_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_69_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_79_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_41_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_80_:%.+]] = stablehlo.add [[VAR_78_]], [[VAR_79_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_81_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_80_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_82_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_45_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_83_:%.+]] = stablehlo.add [[VAR_81_]], [[VAR_82_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_84_:%.+]] = stablehlo.logistic [[VAR_83_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_85_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_70_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_86_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_42_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_87_:%.+]] = stablehlo.add [[VAR_85_]], [[VAR_86_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_88_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_87_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_89_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_46_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_90_:%.+]] = stablehlo.add [[VAR_88_]], [[VAR_89_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_91_:%.+]] = stablehlo.tanh [[VAR_90_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_92_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_84_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_93_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_18_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_94_:%.+]] = stablehlo.multiply [[VAR_92_]], [[VAR_93_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_95_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_77_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_96_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_91_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_97_:%.+]] = stablehlo.multiply [[VAR_95_]], [[VAR_96_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_98_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_94_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_99_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_97_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_100_:%.+]] = stablehlo.add [[VAR_98_]], [[VAR_99_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_101_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_68_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_102_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_40_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_2_:%.+]] = shape.const_shape [16, 512] : tensor<2xindex>
+// CHECK-DAG:       [[VAR_3_:%.+]] = shape.const_shape [2048] : tensor<1xindex>
+// CHECK-DAG:       [[VAR_4_:%.+]] = shape.const_shape [1024, 256] : tensor<2xindex>
+// CHECK-DAG:       [[VAR_5_:%.+]] = shape.const_shape [1024, 512] : tensor<2xindex>
+// CHECK-DAG:       [[VAR_6_:%.+]] = stablehlo.constant dense<1> : tensor<1xi64>
+// CHECK-DAG:       [[VAR_7_:%.+]] = stablehlo.constant dense<768> : tensor<i64>
+// CHECK-DAG:       [[VAR_8_:%.+]] = stablehlo.constant dense<512> : tensor<i64>
+// CHECK-DAG:       [[VAR_9_:%.+]] = stablehlo.constant dense<256> : tensor<i64>
+// CHECK-DAG:       [[VAR_10_:%.+]] = stablehlo.constant dense<0.000000e+00> : tensor<2x16x256xf32>
+// CHECK-DAG:       [[VAR_11_:%.+]] = stablehlo.constant dense<0> : tensor<i64>
+// CHECK-DAG:       [[VAR_12_:%.+]] = stablehlo.constant dense<0> : tensor<1xi64>
+// CHECK-DAG:       [[VAR_13_:%.+]] = stablehlo.constant dense<1> : tensor<i64>
+// CHECK:           [[VAR_14_:%.+]] = stablehlo.dynamic_slice [[VAR_10_]], [[VAR_11_]], [[VAR_11_]], [[VAR_11_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
+// CHECK-DAG:       [[VAR_15_:%.+]] = stablehlo.dynamic_reshape [[VAR_14_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_16_:%.+]] = stablehlo.dynamic_slice [[VAR_10_]], [[VAR_11_]], [[VAR_11_]], [[VAR_11_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_17_:%.+]] = stablehlo.dynamic_reshape [[VAR_16_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_18_:%.+]] = stablehlo.dynamic_slice [[VAR_10_]], [[VAR_13_]], [[VAR_11_]], [[VAR_11_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_19_:%.+]] = stablehlo.dynamic_reshape [[VAR_18_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_20_:%.+]] = stablehlo.dynamic_slice [[VAR_10_]], [[VAR_13_]], [[VAR_11_]], [[VAR_11_]], sizes = [1, 16, 256] : (tensor<2x16x256xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_21_:%.+]] = stablehlo.dynamic_reshape [[VAR_20_]], [[VAR_0_]] : (tensor<1x16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_22_:%.+]] = stablehlo.slice [[PARAM_2_]] [0:1, 0:1024, 0:512] : (tensor<2x1024x512xf32>) -> tensor<1x1024x512xf32>
+// CHECK-DAG:       [[VAR_23_:%.+]] = stablehlo.slice [[PARAM_2_]] [1:2, 0:1024, 0:512] : (tensor<2x1024x512xf32>) -> tensor<1x1024x512xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_24_:%.+]] = stablehlo.dynamic_reshape [[VAR_22_]], [[VAR_5_]] : (tensor<1x1024x512xf32>, tensor<2xindex>) -> tensor<1024x512xf32>
+// CHECK-DAG:       [[VAR_25_:%.+]] = stablehlo.dynamic_reshape [[VAR_23_]], [[VAR_5_]] : (tensor<1x1024x512xf32>, tensor<2xindex>) -> tensor<1024x512xf32>
+// CHECK-DAG:       [[VAR_26_:%.+]] = stablehlo.slice [[PARAM_3_]] [0:1, 0:1024, 0:256] : (tensor<2x1024x256xf32>) -> tensor<1x1024x256xf32>
+// CHECK-DAG:       [[VAR_27_:%.+]] = stablehlo.slice [[PARAM_3_]] [1:2, 0:1024, 0:256] : (tensor<2x1024x256xf32>) -> tensor<1x1024x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_28_:%.+]] = stablehlo.dynamic_reshape [[VAR_26_]], [[VAR_4_]] : (tensor<1x1024x256xf32>, tensor<2xindex>) -> tensor<1024x256xf32>
+// CHECK-DAG:       [[VAR_29_:%.+]] = stablehlo.dynamic_reshape [[VAR_27_]], [[VAR_4_]] : (tensor<1x1024x256xf32>, tensor<2xindex>) -> tensor<1024x256xf32>
+// CHECK-DAG:       [[VAR_30_:%.+]] = stablehlo.transpose [[VAR_24_]], dims = [1, 0] : (tensor<1024x512xf32>) -> tensor<512x1024xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_31_:%.+]] = stablehlo.transpose [[VAR_28_]], dims = [1, 0] : (tensor<1024x256xf32>) -> tensor<256x1024xf32>
+// CHECK-DAG:       [[VAR_32_:%.+]] = stablehlo.transpose [[VAR_25_]], dims = [1, 0] : (tensor<1024x512xf32>) -> tensor<512x1024xf32>
+// CHECK-DAG:       [[VAR_33_:%.+]] = stablehlo.transpose [[VAR_29_]], dims = [1, 0] : (tensor<1024x256xf32>) -> tensor<256x1024xf32>
+// CHECK-DAG:       [[VAR_34_:%.+]] = stablehlo.slice [[PARAM_1_]] [0:1, 0:2048] : (tensor<2x2048xf32>) -> tensor<1x2048xf32>
+// CHECK-DAG:       [[VAR_35_:%.+]] = stablehlo.slice [[PARAM_1_]] [1:2, 0:2048] : (tensor<2x2048xf32>) -> tensor<1x2048xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_36_:%.+]] = stablehlo.dynamic_reshape [[VAR_34_]], [[VAR_3_]] : (tensor<1x2048xf32>, tensor<1xindex>) -> tensor<2048xf32>
+// CHECK-DAG:       [[VAR_37_:%.+]] = stablehlo.dynamic_reshape [[VAR_35_]], [[VAR_3_]] : (tensor<1x2048xf32>, tensor<1xindex>) -> tensor<2048xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_38_:%.+]] = stablehlo.slice [[VAR_36_]] [0:256] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_39_:%.+]] = stablehlo.slice [[VAR_36_]] [256:512] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_40_:%.+]] = stablehlo.slice [[VAR_36_]] [512:768] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_41_:%.+]] = stablehlo.slice [[VAR_36_]] [768:1024] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_42_:%.+]] = stablehlo.slice [[VAR_36_]] [1024:1280] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_43_:%.+]] = stablehlo.slice [[VAR_36_]] [1280:1536] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_44_:%.+]] = stablehlo.slice [[VAR_36_]] [1536:1792] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_45_:%.+]] = stablehlo.slice [[VAR_36_]] [1792:2048] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_46_:%.+]] = stablehlo.slice [[VAR_37_]] [0:256] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_47_:%.+]] = stablehlo.slice [[VAR_37_]] [256:512] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_48_:%.+]] = stablehlo.slice [[VAR_37_]] [512:768] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_49_:%.+]] = stablehlo.slice [[VAR_37_]] [768:1024] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_50_:%.+]] = stablehlo.slice [[VAR_37_]] [1024:1280] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_51_:%.+]] = stablehlo.slice [[VAR_37_]] [1280:1536] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_52_:%.+]] = stablehlo.slice [[VAR_37_]] [1536:1792] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_53_:%.+]] = stablehlo.slice [[VAR_37_]] [1792:2048] : (tensor<2048xf32>) -> tensor<256xf32>
+// CHECK-DAG:       [[VAR_54_:%.+]] = stablehlo.reshape [[VAR_12_]] : (tensor<1xi64>) -> tensor<i64>
+// CHECK:           [[VAR_55_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_54_]], [[VAR_11_]], [[VAR_11_]], sizes = [1, 16, 512] : (tensor<2x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
+// CHECK:           [[VAR_56_:%.+]] = stablehlo.dynamic_reshape [[VAR_55_]], [[VAR_2_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
+// CHECK-DAG:       [[VAR_57_:%.+]] = stablehlo.dot [[VAR_56_]], [[VAR_30_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
+// CHECK-DAG:       [[VAR_58_:%.+]] = stablehlo.dot [[VAR_15_]], [[VAR_31_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
+// CHECK:           [[VAR_59_:%.+]] = stablehlo.add [[VAR_57_]], [[VAR_58_]] : tensor<16x1024xf32>
+// CHECK-DAG:       [[VAR_60_:%.+]] = stablehlo.dynamic_slice [[VAR_59_]], [[VAR_11_]], [[VAR_11_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_61_:%.+]] = stablehlo.dynamic_slice [[VAR_59_]], [[VAR_11_]], [[VAR_9_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_62_:%.+]] = stablehlo.dynamic_slice [[VAR_59_]], [[VAR_11_]], [[VAR_8_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_63_:%.+]] = stablehlo.dynamic_slice [[VAR_59_]], [[VAR_11_]], [[VAR_7_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_64_:%.+]] = stablehlo.broadcast_in_dim [[VAR_38_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_65_:%.+]] = stablehlo.add [[VAR_60_]], [[VAR_64_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_66_:%.+]] = stablehlo.broadcast_in_dim [[VAR_42_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_67_:%.+]] = stablehlo.add [[VAR_65_]], [[VAR_66_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_68_:%.+]] = stablehlo.logistic [[VAR_67_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_69_:%.+]] = stablehlo.broadcast_in_dim [[VAR_40_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_70_:%.+]] = stablehlo.add [[VAR_62_]], [[VAR_69_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_71_:%.+]] = stablehlo.broadcast_in_dim [[VAR_44_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_72_:%.+]] = stablehlo.add [[VAR_70_]], [[VAR_71_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_73_:%.+]] = stablehlo.logistic [[VAR_72_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_74_:%.+]] = stablehlo.broadcast_in_dim [[VAR_41_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_75_:%.+]] = stablehlo.add [[VAR_63_]], [[VAR_74_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_76_:%.+]] = stablehlo.broadcast_in_dim [[VAR_45_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_77_:%.+]] = stablehlo.add [[VAR_75_]], [[VAR_76_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_78_:%.+]] = stablehlo.tanh [[VAR_77_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_79_:%.+]] = stablehlo.multiply [[VAR_73_]], [[VAR_17_]] : tensor<16x256xf32>
+// CHECK:           [[VAR_80_:%.+]] = stablehlo.multiply [[VAR_68_]], [[VAR_78_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_81_:%.+]] = stablehlo.add [[VAR_79_]], [[VAR_80_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_82_:%.+]] = stablehlo.broadcast_in_dim [[VAR_39_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_83_:%.+]] = stablehlo.add [[VAR_61_]], [[VAR_82_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_84_:%.+]] = stablehlo.broadcast_in_dim [[VAR_43_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_85_:%.+]] = stablehlo.add [[VAR_83_]], [[VAR_84_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_86_:%.+]] = stablehlo.logistic [[VAR_85_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_87_:%.+]] = stablehlo.tanh [[VAR_81_]] : tensor<16x256xf32>
+// CHECK:           [[VAR_88_:%.+]] = stablehlo.multiply [[VAR_86_]], [[VAR_87_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_89_:%.+]] = stablehlo.dynamic_reshape [[VAR_88_]], [[VAR_1_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
+// CHECK-DAG:       [[VAR_90_:%.+]] = stablehlo.reshape [[VAR_6_]] : (tensor<1xi64>) -> tensor<i64>
+// CHECK:           [[VAR_91_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_90_]], [[VAR_11_]], [[VAR_11_]], sizes = [1, 16, 512] : (tensor<2x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
+// CHECK:           [[VAR_92_:%.+]] = stablehlo.dynamic_reshape [[VAR_91_]], [[VAR_2_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
+// CHECK-DAG:       [[VAR_93_:%.+]] = stablehlo.dot [[VAR_92_]], [[VAR_30_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
+// CHECK-DAG:       [[VAR_94_:%.+]] = stablehlo.dot [[VAR_88_]], [[VAR_31_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
+// CHECK:           [[VAR_95_:%.+]] = stablehlo.add [[VAR_93_]], [[VAR_94_]] : tensor<16x1024xf32>
+// CHECK-DAG:       [[VAR_96_:%.+]] = stablehlo.dynamic_slice [[VAR_95_]], [[VAR_11_]], [[VAR_11_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_97_:%.+]] = stablehlo.dynamic_slice [[VAR_95_]], [[VAR_11_]], [[VAR_9_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_98_:%.+]] = stablehlo.dynamic_slice [[VAR_95_]], [[VAR_11_]], [[VAR_8_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_99_:%.+]] = stablehlo.dynamic_slice [[VAR_95_]], [[VAR_11_]], [[VAR_7_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_100_:%.+]] = stablehlo.broadcast_in_dim [[VAR_38_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_101_:%.+]] = stablehlo.add [[VAR_96_]], [[VAR_100_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_102_:%.+]] = stablehlo.broadcast_in_dim [[VAR_42_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
 // CHECK:           [[VAR_103_:%.+]] = stablehlo.add [[VAR_101_]], [[VAR_102_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_104_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_103_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_105_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_44_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_106_:%.+]] = stablehlo.add [[VAR_104_]], [[VAR_105_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_107_:%.+]] = stablehlo.logistic [[VAR_106_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_108_:%.+]] = stablehlo.tanh [[VAR_100_]] : tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_109_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_107_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_110_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_108_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_111_:%.+]] = stablehlo.multiply [[VAR_109_]], [[VAR_110_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_112_:%.+]] = stablehlo.dynamic_reshape [[VAR_111_]], [[VAR_1_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
-// CHECK-DAG:       [[VAR_113_:%.+]] = stablehlo.reshape [[VAR_7_]] : (tensor<1xi64>) -> tensor<i64>
-// CHECK:           [[VAR_114_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_113_]], [[VAR_12_]], [[VAR_12_]], sizes = [1, 16, 512] : (tensor<2x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
-// CHECK:           [[VAR_115_:%.+]] = stablehlo.dynamic_reshape [[VAR_114_]], [[VAR_3_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
-// CHECK-DAG:       [[VAR_116_:%.+]] = stablehlo.broadcast_in_dim [[VAR_115_]], dims = [0, 1] : (tensor<16x512xf32>) -> tensor<16x512xf32>
-// CHECK-DAG:       [[VAR_117_:%.+]] = stablehlo.broadcast_in_dim [[VAR_31_]], dims = [0, 1] : (tensor<512x1024xf32>) -> tensor<512x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_118_:%.+]] = stablehlo.dot [[VAR_116_]], [[VAR_117_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_119_:%.+]] = stablehlo.broadcast_in_dim [[VAR_111_]], dims = [0, 1] : (tensor<16x256xf32>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_120_:%.+]] = stablehlo.broadcast_in_dim [[VAR_32_]], dims = [0, 1] : (tensor<256x1024xf32>) -> tensor<256x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_121_:%.+]] = stablehlo.dot [[VAR_119_]], [[VAR_120_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_122_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_118_]], [[VAR_2_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:           [[VAR_123_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_121_]], [[VAR_2_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:           [[VAR_124_:%.+]] = stablehlo.add [[VAR_122_]], [[VAR_123_]] : tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_125_:%.+]] = stablehlo.dynamic_slice [[VAR_124_]], [[VAR_12_]], [[VAR_12_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_126_:%.+]] = stablehlo.dynamic_slice [[VAR_124_]], [[VAR_12_]], [[VAR_10_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_127_:%.+]] = stablehlo.dynamic_slice [[VAR_124_]], [[VAR_12_]], [[VAR_9_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_128_:%.+]] = stablehlo.dynamic_slice [[VAR_124_]], [[VAR_12_]], [[VAR_8_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_129_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_125_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_130_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_39_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_131_:%.+]] = stablehlo.add [[VAR_129_]], [[VAR_130_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_132_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_131_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_133_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_43_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_134_:%.+]] = stablehlo.add [[VAR_132_]], [[VAR_133_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_135_:%.+]] = stablehlo.logistic [[VAR_134_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_136_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_127_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_137_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_41_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_138_:%.+]] = stablehlo.add [[VAR_136_]], [[VAR_137_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_139_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_138_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_140_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_45_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_141_:%.+]] = stablehlo.add [[VAR_139_]], [[VAR_140_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_142_:%.+]] = stablehlo.logistic [[VAR_141_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_143_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_128_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_144_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_42_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_145_:%.+]] = stablehlo.add [[VAR_143_]], [[VAR_144_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_146_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_145_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_147_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_46_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_148_:%.+]] = stablehlo.add [[VAR_146_]], [[VAR_147_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_149_:%.+]] = stablehlo.tanh [[VAR_148_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_150_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_142_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_151_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_100_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_152_:%.+]] = stablehlo.multiply [[VAR_150_]], [[VAR_151_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_153_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_135_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_154_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_149_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_155_:%.+]] = stablehlo.multiply [[VAR_153_]], [[VAR_154_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_156_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_152_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_157_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_155_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_158_:%.+]] = stablehlo.add [[VAR_156_]], [[VAR_157_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_159_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_126_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_160_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_40_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_161_:%.+]] = stablehlo.add [[VAR_159_]], [[VAR_160_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_162_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_161_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_163_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_44_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_164_:%.+]] = stablehlo.add [[VAR_162_]], [[VAR_163_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_165_:%.+]] = stablehlo.logistic [[VAR_164_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_166_:%.+]] = stablehlo.tanh [[VAR_158_]] : tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_167_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_165_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_168_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_166_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_169_:%.+]] = stablehlo.multiply [[VAR_167_]], [[VAR_168_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_170_:%.+]] = stablehlo.dynamic_reshape [[VAR_169_]], [[VAR_1_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
-// CHECK-DAG:       [[VAR_171_:%.+]] = stablehlo.reshape [[VAR_7_]] : (tensor<1xi64>) -> tensor<i64>
-// CHECK:           [[VAR_172_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_171_]], [[VAR_12_]], [[VAR_12_]], sizes = [1, 16, 512] : (tensor<2x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
-// CHECK:           [[VAR_173_:%.+]] = stablehlo.dynamic_reshape [[VAR_172_]], [[VAR_3_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
-// CHECK-DAG:       [[VAR_174_:%.+]] = stablehlo.broadcast_in_dim [[VAR_173_]], dims = [0, 1] : (tensor<16x512xf32>) -> tensor<16x512xf32>
-// CHECK-DAG:       [[VAR_175_:%.+]] = stablehlo.broadcast_in_dim [[VAR_33_]], dims = [0, 1] : (tensor<512x1024xf32>) -> tensor<512x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_176_:%.+]] = stablehlo.dot [[VAR_174_]], [[VAR_175_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_177_:%.+]] = stablehlo.broadcast_in_dim [[VAR_20_]], dims = [0, 1] : (tensor<16x256xf32>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_178_:%.+]] = stablehlo.broadcast_in_dim [[VAR_34_]], dims = [0, 1] : (tensor<256x1024xf32>) -> tensor<256x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_179_:%.+]] = stablehlo.dot [[VAR_177_]], [[VAR_178_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_180_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_176_]], [[VAR_2_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:           [[VAR_181_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_179_]], [[VAR_2_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:           [[VAR_182_:%.+]] = stablehlo.add [[VAR_180_]], [[VAR_181_]] : tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_183_:%.+]] = stablehlo.dynamic_slice [[VAR_182_]], [[VAR_12_]], [[VAR_12_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_184_:%.+]] = stablehlo.dynamic_slice [[VAR_182_]], [[VAR_12_]], [[VAR_10_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_185_:%.+]] = stablehlo.dynamic_slice [[VAR_182_]], [[VAR_12_]], [[VAR_9_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_186_:%.+]] = stablehlo.dynamic_slice [[VAR_182_]], [[VAR_12_]], [[VAR_8_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_187_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_183_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_188_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_47_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_189_:%.+]] = stablehlo.add [[VAR_187_]], [[VAR_188_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_190_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_189_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_191_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_51_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_192_:%.+]] = stablehlo.add [[VAR_190_]], [[VAR_191_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_193_:%.+]] = stablehlo.logistic [[VAR_192_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_194_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_185_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_195_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_49_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_196_:%.+]] = stablehlo.add [[VAR_194_]], [[VAR_195_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_197_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_196_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_198_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_53_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_199_:%.+]] = stablehlo.add [[VAR_197_]], [[VAR_198_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_200_:%.+]] = stablehlo.logistic [[VAR_199_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_201_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_186_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_202_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_50_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_203_:%.+]] = stablehlo.add [[VAR_201_]], [[VAR_202_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_204_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_203_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_205_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_54_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_206_:%.+]] = stablehlo.add [[VAR_204_]], [[VAR_205_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_207_:%.+]] = stablehlo.tanh [[VAR_206_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_208_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_200_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_209_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_22_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_210_:%.+]] = stablehlo.multiply [[VAR_208_]], [[VAR_209_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_211_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_193_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_212_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_207_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_213_:%.+]] = stablehlo.multiply [[VAR_211_]], [[VAR_212_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_214_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_210_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_215_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_213_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_216_:%.+]] = stablehlo.add [[VAR_214_]], [[VAR_215_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_217_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_184_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_218_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_48_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_219_:%.+]] = stablehlo.add [[VAR_217_]], [[VAR_218_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_220_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_219_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_221_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_52_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_222_:%.+]] = stablehlo.add [[VAR_220_]], [[VAR_221_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_223_:%.+]] = stablehlo.logistic [[VAR_222_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_224_:%.+]] = stablehlo.tanh [[VAR_216_]] : tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_225_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_223_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_226_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_224_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_227_:%.+]] = stablehlo.multiply [[VAR_225_]], [[VAR_226_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_228_:%.+]] = stablehlo.dynamic_reshape [[VAR_227_]], [[VAR_1_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
-// CHECK-DAG:       [[VAR_229_:%.+]] = stablehlo.reshape [[VAR_13_]] : (tensor<1xi64>) -> tensor<i64>
-// CHECK:           [[VAR_230_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_229_]], [[VAR_12_]], [[VAR_12_]], sizes = [1, 16, 512] : (tensor<2x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
-// CHECK:           [[VAR_231_:%.+]] = stablehlo.dynamic_reshape [[VAR_230_]], [[VAR_3_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
-// CHECK-DAG:       [[VAR_232_:%.+]] = stablehlo.broadcast_in_dim [[VAR_231_]], dims = [0, 1] : (tensor<16x512xf32>) -> tensor<16x512xf32>
-// CHECK-DAG:       [[VAR_233_:%.+]] = stablehlo.broadcast_in_dim [[VAR_33_]], dims = [0, 1] : (tensor<512x1024xf32>) -> tensor<512x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_234_:%.+]] = stablehlo.dot [[VAR_232_]], [[VAR_233_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_235_:%.+]] = stablehlo.broadcast_in_dim [[VAR_227_]], dims = [0, 1] : (tensor<16x256xf32>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_236_:%.+]] = stablehlo.broadcast_in_dim [[VAR_34_]], dims = [0, 1] : (tensor<256x1024xf32>) -> tensor<256x1024xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_237_:%.+]] = stablehlo.dot [[VAR_235_]], [[VAR_236_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_238_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_234_]], [[VAR_2_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:           [[VAR_239_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_237_]], [[VAR_2_]], dims = [0, 1] : (tensor<16x1024xf32>, tensor<2xindex>) -> tensor<16x1024xf32>
-// CHECK:           [[VAR_240_:%.+]] = stablehlo.add [[VAR_238_]], [[VAR_239_]] : tensor<16x1024xf32>
-// CHECK-DAG:       [[VAR_241_:%.+]] = stablehlo.dynamic_slice [[VAR_240_]], [[VAR_12_]], [[VAR_12_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_242_:%.+]] = stablehlo.dynamic_slice [[VAR_240_]], [[VAR_12_]], [[VAR_10_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_243_:%.+]] = stablehlo.dynamic_slice [[VAR_240_]], [[VAR_12_]], [[VAR_9_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_244_:%.+]] = stablehlo.dynamic_slice [[VAR_240_]], [[VAR_12_]], [[VAR_8_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_245_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_241_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_246_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_47_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_247_:%.+]] = stablehlo.add [[VAR_245_]], [[VAR_246_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_248_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_247_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_249_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_51_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_250_:%.+]] = stablehlo.add [[VAR_248_]], [[VAR_249_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_251_:%.+]] = stablehlo.logistic [[VAR_250_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_252_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_243_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_253_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_49_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_254_:%.+]] = stablehlo.add [[VAR_252_]], [[VAR_253_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_255_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_254_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_256_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_53_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_257_:%.+]] = stablehlo.add [[VAR_255_]], [[VAR_256_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_258_:%.+]] = stablehlo.logistic [[VAR_257_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_259_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_244_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_260_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_50_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_261_:%.+]] = stablehlo.add [[VAR_259_]], [[VAR_260_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_262_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_261_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_263_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_54_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_264_:%.+]] = stablehlo.add [[VAR_262_]], [[VAR_263_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_265_:%.+]] = stablehlo.tanh [[VAR_264_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_266_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_258_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_267_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_216_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_268_:%.+]] = stablehlo.multiply [[VAR_266_]], [[VAR_267_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_269_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_251_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_270_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_265_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_271_:%.+]] = stablehlo.multiply [[VAR_269_]], [[VAR_270_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_272_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_268_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_273_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_271_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_274_:%.+]] = stablehlo.add [[VAR_272_]], [[VAR_273_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_275_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_242_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_276_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_48_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_277_:%.+]] = stablehlo.add [[VAR_275_]], [[VAR_276_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_278_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_277_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_279_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_52_]], [[VAR_0_]], dims = [1] : (tensor<256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_280_:%.+]] = stablehlo.add [[VAR_278_]], [[VAR_279_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_281_:%.+]] = stablehlo.logistic [[VAR_280_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_282_:%.+]] = stablehlo.tanh [[VAR_274_]] : tensor<16x256xf32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_283_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_281_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_284_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_282_]], [[VAR_0_]], dims = [0, 1] : (tensor<16x256xf32>, tensor<2xindex>) -> tensor<16x256xf32>
-// CHECK:           [[VAR_285_:%.+]] = stablehlo.multiply [[VAR_283_]], [[VAR_284_]] : tensor<16x256xf32>
-// CHECK-DAG:       [[VAR_286_:%.+]] = stablehlo.dynamic_reshape [[VAR_285_]], [[VAR_1_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
-// CHECK-DAG:       [[VAR_287_:%.+]] = stablehlo.concatenate [[VAR_112_]], [[VAR_170_]], dim = 0 : (tensor<1x1x16x256xf32>, tensor<1x1x16x256xf32>) -> tensor<2x1x16x256xf32>
-// CHECK:           [[VAR_288_:%.+]] = stablehlo.concatenate [[VAR_286_]], [[VAR_228_]], dim = 0 : (tensor<1x1x16x256xf32>, tensor<1x1x16x256xf32>) -> tensor<2x1x16x256xf32>
-// CHECK:           [[VAR_289_:%.+]] = stablehlo.concatenate [[VAR_287_]], [[VAR_288_]], dim = 1 : (tensor<2x1x16x256xf32>, tensor<2x1x16x256xf32>) -> tensor<2x2x16x256xf32>
-// CHECK:           return [[VAR_289_]] : tensor<2x2x16x256xf32>
+// CHECK-DAG:       [[VAR_104_:%.+]] = stablehlo.logistic [[VAR_103_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_105_:%.+]] = stablehlo.broadcast_in_dim [[VAR_40_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_106_:%.+]] = stablehlo.add [[VAR_98_]], [[VAR_105_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_107_:%.+]] = stablehlo.broadcast_in_dim [[VAR_44_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_108_:%.+]] = stablehlo.add [[VAR_106_]], [[VAR_107_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_109_:%.+]] = stablehlo.logistic [[VAR_108_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_110_:%.+]] = stablehlo.broadcast_in_dim [[VAR_41_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_111_:%.+]] = stablehlo.add [[VAR_99_]], [[VAR_110_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_112_:%.+]] = stablehlo.broadcast_in_dim [[VAR_45_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_113_:%.+]] = stablehlo.add [[VAR_111_]], [[VAR_112_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_114_:%.+]] = stablehlo.tanh [[VAR_113_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_115_:%.+]] = stablehlo.multiply [[VAR_109_]], [[VAR_81_]] : tensor<16x256xf32>
+// CHECK:           [[VAR_116_:%.+]] = stablehlo.multiply [[VAR_104_]], [[VAR_114_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_117_:%.+]] = stablehlo.add [[VAR_115_]], [[VAR_116_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_118_:%.+]] = stablehlo.broadcast_in_dim [[VAR_39_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_119_:%.+]] = stablehlo.add [[VAR_97_]], [[VAR_118_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_120_:%.+]] = stablehlo.broadcast_in_dim [[VAR_43_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_121_:%.+]] = stablehlo.add [[VAR_119_]], [[VAR_120_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_122_:%.+]] = stablehlo.logistic [[VAR_121_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_123_:%.+]] = stablehlo.tanh [[VAR_117_]] : tensor<16x256xf32>
+// CHECK:           [[VAR_124_:%.+]] = stablehlo.multiply [[VAR_122_]], [[VAR_123_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_125_:%.+]] = stablehlo.dynamic_reshape [[VAR_124_]], [[VAR_1_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
+// CHECK-DAG:       [[VAR_126_:%.+]] = stablehlo.reshape [[VAR_6_]] : (tensor<1xi64>) -> tensor<i64>
+// CHECK:           [[VAR_127_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_126_]], [[VAR_11_]], [[VAR_11_]], sizes = [1, 16, 512] : (tensor<2x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
+// CHECK:           [[VAR_128_:%.+]] = stablehlo.dynamic_reshape [[VAR_127_]], [[VAR_2_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
+// CHECK-DAG:       [[VAR_129_:%.+]] = stablehlo.dot [[VAR_128_]], [[VAR_32_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
+// CHECK-DAG:       [[VAR_130_:%.+]] = stablehlo.dot [[VAR_19_]], [[VAR_33_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
+// CHECK:           [[VAR_131_:%.+]] = stablehlo.add [[VAR_129_]], [[VAR_130_]] : tensor<16x1024xf32>
+// CHECK-DAG:       [[VAR_132_:%.+]] = stablehlo.dynamic_slice [[VAR_131_]], [[VAR_11_]], [[VAR_11_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_133_:%.+]] = stablehlo.dynamic_slice [[VAR_131_]], [[VAR_11_]], [[VAR_9_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_134_:%.+]] = stablehlo.dynamic_slice [[VAR_131_]], [[VAR_11_]], [[VAR_8_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_135_:%.+]] = stablehlo.dynamic_slice [[VAR_131_]], [[VAR_11_]], [[VAR_7_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_136_:%.+]] = stablehlo.broadcast_in_dim [[VAR_46_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_137_:%.+]] = stablehlo.add [[VAR_132_]], [[VAR_136_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_138_:%.+]] = stablehlo.broadcast_in_dim [[VAR_50_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_139_:%.+]] = stablehlo.add [[VAR_137_]], [[VAR_138_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_140_:%.+]] = stablehlo.logistic [[VAR_139_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_141_:%.+]] = stablehlo.broadcast_in_dim [[VAR_48_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_142_:%.+]] = stablehlo.add [[VAR_134_]], [[VAR_141_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_143_:%.+]] = stablehlo.broadcast_in_dim [[VAR_52_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_144_:%.+]] = stablehlo.add [[VAR_142_]], [[VAR_143_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_145_:%.+]] = stablehlo.logistic [[VAR_144_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_146_:%.+]] = stablehlo.broadcast_in_dim [[VAR_49_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_147_:%.+]] = stablehlo.add [[VAR_135_]], [[VAR_146_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_148_:%.+]] = stablehlo.broadcast_in_dim [[VAR_53_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_149_:%.+]] = stablehlo.add [[VAR_147_]], [[VAR_148_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_150_:%.+]] = stablehlo.tanh [[VAR_149_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_151_:%.+]] = stablehlo.multiply [[VAR_145_]], [[VAR_21_]] : tensor<16x256xf32>
+// CHECK:           [[VAR_152_:%.+]] = stablehlo.multiply [[VAR_140_]], [[VAR_150_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_153_:%.+]] = stablehlo.add [[VAR_151_]], [[VAR_152_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_154_:%.+]] = stablehlo.broadcast_in_dim [[VAR_47_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_155_:%.+]] = stablehlo.add [[VAR_133_]], [[VAR_154_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_156_:%.+]] = stablehlo.broadcast_in_dim [[VAR_51_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_157_:%.+]] = stablehlo.add [[VAR_155_]], [[VAR_156_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_158_:%.+]] = stablehlo.logistic [[VAR_157_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_159_:%.+]] = stablehlo.tanh [[VAR_153_]] : tensor<16x256xf32>
+// CHECK:           [[VAR_160_:%.+]] = stablehlo.multiply [[VAR_158_]], [[VAR_159_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_161_:%.+]] = stablehlo.dynamic_reshape [[VAR_160_]], [[VAR_1_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
+// CHECK-DAG:       [[VAR_162_:%.+]] = stablehlo.reshape [[VAR_12_]] : (tensor<1xi64>) -> tensor<i64>
+// CHECK:           [[VAR_163_:%.+]] = stablehlo.dynamic_slice [[PARAM_0_]], [[VAR_162_]], [[VAR_11_]], [[VAR_11_]], sizes = [1, 16, 512] : (tensor<2x16x512xf32>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x16x512xf32>
+// CHECK:           [[VAR_164_:%.+]] = stablehlo.dynamic_reshape [[VAR_163_]], [[VAR_2_]] : (tensor<1x16x512xf32>, tensor<2xindex>) -> tensor<16x512xf32>
+// CHECK-DAG:       [[VAR_165_:%.+]] = stablehlo.dot [[VAR_164_]], [[VAR_32_]] : (tensor<16x512xf32>, tensor<512x1024xf32>) -> tensor<16x1024xf32>
+// CHECK-DAG:       [[VAR_166_:%.+]] = stablehlo.dot [[VAR_160_]], [[VAR_33_]] : (tensor<16x256xf32>, tensor<256x1024xf32>) -> tensor<16x1024xf32>
+// CHECK:           [[VAR_167_:%.+]] = stablehlo.add [[VAR_165_]], [[VAR_166_]] : tensor<16x1024xf32>
+// CHECK-DAG:       [[VAR_168_:%.+]] = stablehlo.dynamic_slice [[VAR_167_]], [[VAR_11_]], [[VAR_11_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_169_:%.+]] = stablehlo.dynamic_slice [[VAR_167_]], [[VAR_11_]], [[VAR_9_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_170_:%.+]] = stablehlo.dynamic_slice [[VAR_167_]], [[VAR_11_]], [[VAR_8_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_171_:%.+]] = stablehlo.dynamic_slice [[VAR_167_]], [[VAR_11_]], [[VAR_7_]], sizes = [16, 256] : (tensor<16x1024xf32>, tensor<i64>, tensor<i64>) -> tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_172_:%.+]] = stablehlo.broadcast_in_dim [[VAR_46_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_173_:%.+]] = stablehlo.add [[VAR_168_]], [[VAR_172_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_174_:%.+]] = stablehlo.broadcast_in_dim [[VAR_50_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_175_:%.+]] = stablehlo.add [[VAR_173_]], [[VAR_174_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_176_:%.+]] = stablehlo.logistic [[VAR_175_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_177_:%.+]] = stablehlo.broadcast_in_dim [[VAR_48_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_178_:%.+]] = stablehlo.add [[VAR_170_]], [[VAR_177_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_179_:%.+]] = stablehlo.broadcast_in_dim [[VAR_52_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_180_:%.+]] = stablehlo.add [[VAR_178_]], [[VAR_179_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_181_:%.+]] = stablehlo.logistic [[VAR_180_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_182_:%.+]] = stablehlo.broadcast_in_dim [[VAR_49_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_183_:%.+]] = stablehlo.add [[VAR_171_]], [[VAR_182_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_184_:%.+]] = stablehlo.broadcast_in_dim [[VAR_53_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_185_:%.+]] = stablehlo.add [[VAR_183_]], [[VAR_184_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_186_:%.+]] = stablehlo.tanh [[VAR_185_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_187_:%.+]] = stablehlo.multiply [[VAR_181_]], [[VAR_153_]] : tensor<16x256xf32>
+// CHECK:           [[VAR_188_:%.+]] = stablehlo.multiply [[VAR_176_]], [[VAR_186_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_189_:%.+]] = stablehlo.add [[VAR_187_]], [[VAR_188_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_190_:%.+]] = stablehlo.broadcast_in_dim [[VAR_47_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK-NOT: separator of consecutive DAGs
+// CHECK-DAG:       [[VAR_191_:%.+]] = stablehlo.add [[VAR_169_]], [[VAR_190_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_192_:%.+]] = stablehlo.broadcast_in_dim [[VAR_51_]], dims = [1] : (tensor<256xf32>) -> tensor<16x256xf32>
+// CHECK:           [[VAR_193_:%.+]] = stablehlo.add [[VAR_191_]], [[VAR_192_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_194_:%.+]] = stablehlo.logistic [[VAR_193_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_195_:%.+]] = stablehlo.tanh [[VAR_189_]] : tensor<16x256xf32>
+// CHECK:           [[VAR_196_:%.+]] = stablehlo.multiply [[VAR_194_]], [[VAR_195_]] : tensor<16x256xf32>
+// CHECK-DAG:       [[VAR_197_:%.+]] = stablehlo.dynamic_reshape [[VAR_196_]], [[VAR_1_]] : (tensor<16x256xf32>, tensor<4xindex>) -> tensor<1x1x16x256xf32>
+// CHECK-DAG:       [[VAR_198_:%.+]] = stablehlo.concatenate [[VAR_89_]], [[VAR_125_]], dim = 0 : (tensor<1x1x16x256xf32>, tensor<1x1x16x256xf32>) -> tensor<2x1x16x256xf32>
+// CHECK:           [[VAR_199_:%.+]] = stablehlo.concatenate [[VAR_197_]], [[VAR_161_]], dim = 0 : (tensor<1x1x16x256xf32>, tensor<1x1x16x256xf32>) -> tensor<2x1x16x256xf32>
+// CHECK:           [[VAR_200_:%.+]] = stablehlo.concatenate [[VAR_198_]], [[VAR_199_]], dim = 1 : (tensor<2x1x16x256xf32>, tensor<2x1x16x256xf32>) -> tensor<2x2x16x256xf32>
+// CHECK:           return [[VAR_200_]] : tensor<2x2x16x256xf32>
 // CHECK:         }
 }
diff --git a/test/mlir/conversion/onnx_to_stablehlo/Tensor/Expand.mlir b/test/mlir/conversion/onnx_to_stablehlo/Tensor/Expand.mlir
index c33092cc..c1630b38 100644
--- a/test/mlir/conversion/onnx_to_stablehlo/Tensor/Expand.mlir
+++ b/test/mlir/conversion/onnx_to_stablehlo/Tensor/Expand.mlir
@@ -1,24 +1,14 @@
 // RUN: onnx-mlir-opt --shape-inference --convert-onnx-to-stablehlo --canonicalize %s -split-input-file | FileCheck %s

-// -----
-
 func.func @test_expand_with_arith_constant(%arg0 : tensor<2x1x6x1xf32>) -> tensor<*xf32> {
   %0 = "onnx.Constant"() {value = dense<[7, 1, 5]> : tensor<3xi64> } : () -> tensor<3xi64>
   %1 = "onnx.Expand"(%arg0, %0) : (tensor<2x1x6x1xf32>, tensor<3xi64>) -> tensor<*xf32>
   "func.return"(%1) : (tensor<*xf32>) -> ()
-}
-
 // CHECK-LABEL:  func.func @test_expand_with_arith_constant
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<2x1x6x1xf32>) -> tensor<2x7x6x5xf32> {
-// CHECK-DAG:       [[VAR_0_:%.+]] = shape.const_shape [2, 7, 6, 5] : tensor<4xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.constant dense<1.000000e+00> : tensor<f32>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.broadcast_in_dim [[VAR_1_]], dims = [] : (tensor<f32>) -> tensor<7x1x5xf32>
-// CHECK-DAG:       [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_0_]], dims = [0, 1, 2, 3] : (tensor<2x1x6x1xf32>, tensor<4xindex>) -> tensor<2x7x6x5xf32>
-// CHECK:           [[VAR_4_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_2_]], [[VAR_0_]], dims = [1, 2, 3] : (tensor<7x1x5xf32>, tensor<4xindex>) -> tensor<2x7x6x5xf32>
-// CHECK:           [[VAR_5_:%.+]] = stablehlo.multiply [[VAR_3_]], [[VAR_4_]] : tensor<2x7x6x5xf32>
-// CHECK:           return [[VAR_5_]] : tensor<2x7x6x5xf32>
-// CHECK:         }
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.broadcast_in_dim [[PARAM_0_]], dims = [0, 1, 2, 3] : (tensor<2x1x6x1xf32>) -> tensor<2x7x6x5xf32>
+// CHECK:           return [[VAR_0_]] : tensor<2x7x6x5xf32>
+}

 // -----

@@ -26,38 +16,24 @@ func.func @test_expand_integer_tensor(%arg0 : tensor<2x1x6x1xi64>) -> tensor<*xi
   %0 = "onnx.Constant"() {value = dense<[7, 1, 5]> : tensor<3xi64> } : () -> tensor<3xi64>
   %1 = "onnx.Expand"(%arg0, %0) : (tensor<2x1x6x1xi64>, tensor<3xi64>) -> tensor<*xi64>
   "func.return"(%1) : (tensor<*xi64>) -> ()
-}
-
 // CHECK-LABEL:  func.func @test_expand_integer_tensor
 // CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<2x1x6x1xi64>) -> tensor<2x7x6x5xi64> {
-// CHECK-DAG:       [[VAR_0_:%.+]] = shape.const_shape [2, 7, 6, 5] : tensor<4xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.constant dense<1> : tensor<i64>
-// CHECK-NOT: separator of consecutive DAGs
-// CHECK-DAG:       [[VAR_2_:%.+]] = stablehlo.broadcast_in_dim [[VAR_1_]], dims = [] : (tensor<i64>) -> tensor<7x1x5xi64>
-// CHECK-DAG:       [[VAR_3_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_0_]], dims = [0, 1, 2, 3] : (tensor<2x1x6x1xi64>, tensor<4xindex>) -> tensor<2x7x6x5xi64>
-// CHECK:           [[VAR_4_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_2_]], [[VAR_0_]], dims = [1, 2, 3] : (tensor<7x1x5xi64>, tensor<4xindex>) -> tensor<2x7x6x5xi64>
-// CHECK:           [[VAR_5_:%.+]] = stablehlo.multiply [[VAR_3_]], [[VAR_4_]] : tensor<2x7x6x5xi64>
-// CHECK:           return [[VAR_5_]] : tensor<2x7x6x5xi64>
-// CHECK:         }
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.broadcast_in_dim [[PARAM_0_]], dims = [0, 1, 2, 3] : (tensor<2x1x6x1xi64>) -> tensor<2x7x6x5xi64>
+// CHECK:           return [[VAR_0_]] : tensor<2x7x6x5xi64>
+}

 // -----

-func.func @test_expand_with_shape(%arg0 : tensor<2x1x6x1xf32>, %arg1: tensor<6x2xf32>) -> tensor<*xf32> {
-  %0 = "onnx.Shape"(%arg1) : (tensor<6x2xf32>) -> tensor<*xi64>
-  %1 = "onnx.Expand"(%arg0, %0) : (tensor<2x1x6x1xf32>, tensor<*xi64>) -> tensor<*xf32>
-  "func.return"(%1) : (tensor<*xf32>) -> ()
+func.func @expand_dyn(%arg0: tensor<?x?xf32>, %arg1: tensor<3xi64>) -> tensor<?x?x?xf32>  {
+  %0 = "onnx.Expand"(%arg0, %arg1) : (tensor<?x?xf32>, tensor<3xi64>) -> tensor<?x?x?xf32>
+  return %0 : tensor<?x?x?xf32>
+// CHECK-LABEL:  func.func @expand_dyn
+// CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<?x?xf32>, [[PARAM_1_:%.+]]: tensor<3xi64>) -> tensor<?x?x?xf32> {
+// CHECK:           [[VAR_0_:%.+]] = stablehlo.constant dense<1.000000e+00> : tensor<f32>
+// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_0_]], [[PARAM_1_]], dims = [] : (tensor<f32>, tensor<3xi64>) -> tensor<?x?x?xf32>
+// CHECK-DAG:       [[VAR_2_:%.+]] = shape.shape_of [[PARAM_0_]] : tensor<?x?xf32> -> tensor<2xindex>
+// CHECK:           [[VAR_3_:%.+]] = shape.shape_of [[VAR_1_]] : tensor<?x?x?xf32> -> tensor<3xindex>
+// CHECK:           [[VAR_4_:%.+]] = shape.broadcast [[VAR_2_]], [[VAR_3_]] : tensor<2xindex>, tensor<3xindex> -> tensor<3xindex>
+// CHECK:           [[VAR_5_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_4_]], dims = [1, 2] : (tensor<?x?xf32>, tensor<3xindex>) -> tensor<?x?x?xf32>
+// CHECK:           return [[VAR_5_]] : tensor<?x?x?xf32>
 }
-
-// CHECK-LABEL:  func.func @test_expand_with_shape
-// CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<2x1x6x1xf32>, [[PARAM_1_:%.+]]: tensor<6x2xf32>) -> tensor<2x1x6x2xf32> {
-// CHECK-DAG:       [[VAR_cst_:%.+]] = arith.constant dense<[6, 2]> : tensor<2xi64>
-// CHECK-DAG:       [[VAR_0_:%.+]] = shape.const_shape [2, 1, 6, 1] : tensor<4xindex>
-// CHECK-DAG:       [[VAR_1_:%.+]] = stablehlo.constant dense<1.000000e+00> : tensor<f32>
-// CHECK:           [[VAR_2_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_1_]], [[VAR_cst_]], dims = [] : (tensor<f32>, tensor<2xi64>) -> tensor<?x?xf32>
-// CHECK:           [[VAR_3_:%.+]] = shape.shape_of [[VAR_2_]] : tensor<?x?xf32> -> tensor<2xindex>
-// CHECK:           [[VAR_4_:%.+]] = shape.broadcast [[VAR_3_]], [[VAR_0_]] : tensor<2xindex>, tensor<4xindex> -> tensor<4xindex>
-// CHECK-DAG:       [[VAR_5_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[PARAM_0_]], [[VAR_4_]], dims = [0, 1, 2, 3] : (tensor<2x1x6x1xf32>, tensor<4xindex>) -> tensor<2x1x6x2xf32>
-// CHECK-DAG:       [[VAR_6_:%.+]] = stablehlo.dynamic_broadcast_in_dim [[VAR_2_]], [[VAR_4_]], dims = [2, 3] : (tensor<?x?xf32>, tensor<4xindex>) -> tensor<2x1x6x2xf32>
-// CHECK:           [[VAR_7_:%.+]] = stablehlo.multiply [[VAR_5_]], [[VAR_6_]] : tensor<2x1x6x2xf32>
-// CHECK:           return [[VAR_7_]] : tensor<2x1x6x2xf32>
-// CHECK:         }
