diff --git a/src/Dialect/ONNX/ONNXOps/OpHelper.hpp.inc b/src/Dialect/ONNX/ONNXOps/OpHelper.hpp.inc
index bf0d5d46..1e03f2f2 100644
--- a/src/Dialect/ONNX/ONNXOps/OpHelper.hpp.inc
+++ b/src/Dialect/ONNX/ONNXOps/OpHelper.hpp.inc
@@ -23,8 +23,21 @@ mlir::Location ONNXLoc(mlir::Operation *op) {
       op->getLoc());
 }

-inline bool isNoneValue(mlir::Value value) {
-  return llvm::isa<mlir::NoneType>(value.getType());
+// Returns true if the Value is defined by a unit constant.
+// The unit constant can  be 1. NoneType, or 2. 1D tensor with 0 length
+// For example, NoneType, tensor<0xf32>
+// Some onnx model uses 0 length tensor for unit constant.
+inline bool isNoneValue(mlir::Value v) {
+  if (v.getType().isa<mlir::NoneType>())
+    return true;
+
+  if (auto ty = v.getType().dyn_cast<mlir::ShapedType>()) {
+    auto shape = ty.getShape();
+    if (shape.size() == 1 && shape[0] == 0)
+      return true;
+  }
+
+  return false;
 }

 /// Check the defining operation of a value.
