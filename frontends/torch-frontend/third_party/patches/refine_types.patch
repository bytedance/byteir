diff --git a/lib/Dialect/Torch/Transforms/RefineTypes.cpp b/lib/Dialect/Torch/Transforms/RefineTypes.cpp
index 563c8124..c2c53a4d 100644
--- a/lib/Dialect/Torch/Transforms/RefineTypes.cpp
+++ b/lib/Dialect/Torch/Transforms/RefineTypes.cpp
@@ -68,6 +68,7 @@
 #include "torch-mlir/Dialect/Torch/IR/TorchDialect.h"
 #include "torch-mlir/Dialect/Torch/IR/TorchOps.h"
 #include "torch-mlir/Dialect/Torch/Transforms/Passes.h"
+#include "torch-mlir/Dialect/Torch/Utils/CustomOpUtils.h"
 #include "torch-mlir/Dialect/Torch/Utils/TorchUpstream.h"
 #include "torch-mlir/Dialect/Torch/Utils/Utils.h"
 
@@ -1230,6 +1241,22 @@ void TypeAnalysis::visitOperation(Operation *op,
     return;
   }
 
+  if (auto customOp = dyn_cast<CustomOp>(op)) {
+    std::string opName =
+        customOp->getAttrOfType<StringAttr>(getCustomOpName()).str();
+    if (opName == getDynamicPartitionCustomName()) {
+      for (size_t i = 0; i < op->getNumResults(); i++) {
+        incorporateKnowledge(op->getResult(i), operands[0]->getValue());
+      }
+      return;
+    } else if (opName == getDynamicStitchCustomName()) {
+      return incorporateKnowledge(op->getResult(0),
+                                  operands[operands.size() - 1]->getValue());
+    } else if (opName == getDynamicMaskStitchCustomName()) {
+      return incorporateKnowledge(op->getResult(0), operands[0]->getValue());
+    }
+  }
+
   // Otherwise, this is an unknown operation, so reset the state.
   setAllToEntryStates(results);
   return;
